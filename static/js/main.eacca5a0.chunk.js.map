{"version":3,"sources":["App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["mainLifts","olympicLifts","accessoryPool","weeks","week","type","percent","reps","percents","App","oneRepMax","setOneRepMax","useState","squat","bench","deadlift","press","clean","snatch","currentDay","setCurrentDay","completedDays","setCompletedDays","saved","localStorage","getItem","JSON","parse","Array","fill","wod","setWod","deferredPrompt","setDeferredPrompt","showInstallButton","setShowInstallButton","useEffect","handler","e","preventDefault","window","addEventListener","removeEventListener","setItem","stringify","fetch","headers","Authorization","then","res","json","data","_data$data","_data$data$","workout","description","catch","handleChange","id","value","target","[object Object]","parseInt","calculateWeight","lift","Math","round","renderLift","name","liftKey","length","React","createElement","className","accessories","map","acc","idx","key","backoffPercent","split","mainFocus","olympicFocus","getRandomItems","arr","count","sort","random","slice","todayLabel","charAt","toUpperCase","_","onClick","Object","keys","htmlFor","onChange","placeholder","markDayComplete","prev","updated","handleInstallClick","prompt","userChoice","style","position","bottom","right","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","_config$onUpdate","_config$onSuccess","state","controller","console","log","onUpdate","call","onSuccess","error","ReactDOM","createRoot","document","getElementById","render","StrictMode","origin","Service-Worker","response","contentType","get","status","includes","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eacca5a0.chunk.js","sourcesContent":["// App.tsx (enhanced with SugarWOD API, styled calendar, and localStorage persistence)\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nconst mainLifts = ['squat', 'bench', 'deadlift', 'press'];\r\nconst olympicLifts = ['clean', 'snatch'];\r\nconst accessoryPool: string[] = [\r\n  'Overhead Press – 3x8 (barbell) @ light to moderate weight',\r\n  'Dumbbell Bench Press – 3x12 @ light to moderate',\r\n  'Incline Bench Press - 3x10 @ light to moderate',\r\n  'Dumbbell Incline Bench - 3x10 @ light to moderate',\r\n  'Chin-ups – 3xMax',\r\n  'Pull-ups – 3xMax',\r\n  'Renegade Rows – 3x10',\r\n  'Russian Twists – 3x20',\r\n  'Plate Overhead Lunge – 2x10/leg',\r\n  'Goblet Squat – 3x12',\r\n  'Bodyweight Dips – 3xMax',\r\n  'Burpee to Renegade Row – 3x10',\r\n  'Dumbbell Lunges – 3x12',\r\n  'Kettlebell Front rack lunge 3x10',\r\n  'Farmers Carry 3x100m',\r\n  'Plank Rows – 3x10',\r\n  'Overhead Plate Carry – 2x30s',\r\n  'Push-ups – 3xMax',\r\n  'Handstand Hold – 3x30sec',\r\n  'Push Press – 3x8 @ moderate weight',\r\n  'Behind Neck (BN) Push Press 3x8 @ moderate weight',\r\n  'Snatch Balance – 5x3 @ light weight',\r\n  'Push Jerk – 3x3 @ moderate weight ',\r\n  'Split Jerk – 3x3 @ moderate weight',\r\n  'L-Sit – 3x10sec',\r\n  'Clean Pulls: 3x10 @ light/moderate weight',\r\n  'Sumo Deadlift High Pulls 3x10 @ light weight',\r\n  'Tabata Burpees 3 rounds',\r\n  'Tabata Pushups 3 rounds'\r\n];\r\n\r\nconst weeks: (\r\n  | { week: number; type: 'base' | 'deload'; percent: number; reps: string }\r\n  | { week: number; type: 'wave'; percents: number[]; reps: string[] }\r\n)[] = [\r\n  { week: 1, type: 'base', percent: 0.7, reps: '4x6' },\r\n  { week: 2, type: 'base', percent: 0.75, reps: '4x5' },\r\n  { week: 3, type: 'base', percent: 0.8, reps: '4x4' },\r\n  { week: 4, type: 'wave', percents: [0.75, 0.77, 0.84, 0.87, 0.8, 0.75], reps: ['1x7', '1x5', '1x3', '1x3', '1x5', '1x7'] },\r\n  { week: 5, type: 'base', percent: 0.82, reps: '3x3' },\r\n  { week: 6, type: 'wave', percents: [0.77, 0.8, 0.86, 0.9, 0.82, 0.77], reps: ['1x7', '1x5', '1x3', '1x2', '1x4', '1x6'] },\r\n  { week: 7, type: 'base', percent: 0.85, reps: '3x2' },\r\n  { week: 8, type: 'deload', percent: 0.6, reps: '3x5' },\r\n];\r\n\r\nconst App: React.FC = () => {\r\n  const [oneRepMax, setOneRepMax] = useState<Record<string, number>>({\r\n    squat: 0,\r\n    bench: 0,\r\n    deadlift: 0,\r\n    press: 0,\r\n    clean: 0,\r\n    snatch: 0,\r\n  });\r\n\r\n  const [currentDay, setCurrentDay] = useState<number>(0);\r\n  const [completedDays, setCompletedDays] = useState<boolean[]>(() => {\r\n    const saved = localStorage.getItem('completedDays');\r\n    return saved ? JSON.parse(saved) : Array(7).fill(false);\r\n  });\r\n  const [wod, setWod] = useState<string>('');\r\n  const [deferredPrompt, setDeferredPrompt] = useState<Event | null>(null);\r\n  const [showInstallButton, setShowInstallButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handler = (e: Event) => {\r\n      e.preventDefault();\r\n      setDeferredPrompt(e);\r\n      setShowInstallButton(true);\r\n    };\r\n    window.addEventListener('beforeinstallprompt', handler);\r\n    return () => window.removeEventListener('beforeinstallprompt', handler);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('completedDays', JSON.stringify(completedDays));\r\n  }, [completedDays]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.sugarwod.com/v2/workouts?affiliate_id=demo', {\r\n      headers: {\r\n        'Authorization': 'Bearer YOUR_API_KEY'\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const workout = data?.data?.[0]?.description || 'No WOD available.';\r\n        setWod(workout);\r\n      })\r\n      .catch(() => setWod('Failed to fetch WOD.'));\r\n  }, []);\r\n\r\n  const handleInstallClick = () => {\r\n    if (!deferredPrompt) return;\r\n    (deferredPrompt as any).prompt();\r\n    (deferredPrompt as any).userChoice.then(() => {\r\n      setDeferredPrompt(null);\r\n      setShowInstallButton(false);\r\n    });\r\n  };\r\n\r\n  const markDayComplete = () => {\r\n    setCompletedDays((prev) => {\r\n      const updated = [...prev];\r\n      updated[currentDay % 7] = true;\r\n      return updated;\r\n    });\r\n    setCurrentDay((prev) => prev + 1);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { id, value } = e.target;\r\n    setOneRepMax({ ...oneRepMax, [id]: parseInt(value) || 0 });\r\n  };\r\n\r\n  const calculateWeight = (percent: number, lift: string): string => {\r\n    return `${Math.round(oneRepMax[lift] * percent)} lbs @ ${Math.round(percent * 100)}%`;\r\n  };\r\n\r\n  const renderLift = (name: string, liftKey: string) => {\r\n    const week = weeks[currentDay % weeks.length];\r\n    if (week.type === 'wave') {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{name} – Wave Week</label>\r\n          <ul>\r\n            {accessories.map((acc, idx) => (\r\n              <li key={idx}>{acc}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n    const backoffPercent = week.percent - 0.05;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{name} – {week.reps} @ {Math.round(week.percent * 100)}%</label>\r\n        <p>Top Set: {calculateWeight(week.percent, liftKey)}</p>\r\n        <p>Backoff Sets: 2x{week.reps.split('x')[1]} @ {calculateWeight(backoffPercent, liftKey)}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getRandomItems = (arr: string[], count: number) => {\r\n    const shuffled = [...arr].sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count);\r\n  };\r\n\r\n  const mainFocus = mainLifts[currentDay % mainLifts.length];\r\n  const olympicFocus = olympicLifts[currentDay % olympicLifts.length];\r\n  const accessories = getRandomItems(accessoryPool, 3);\r\n  const todayLabel = `${mainFocus.charAt(0).toUpperCase() + mainFocus.slice(1)} Focus`;\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"calendar-view\">\r\n        <h3>This Week</h3>\r\n        <div className=\"calendar-row\">\r\n          {[...Array(7)].map((_, idx) => (\r\n            <div\r\n              key={idx}\r\n              className={`calendar-day ${completedDays[idx] ? 'completed' : ''}`}\r\n              onClick={() => setCurrentDay(idx)}\r\n            >\r\n              {`Day ${idx + 1}`}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <h1 className=\"app-title\">Strength App: Day {currentDay + 1} – {todayLabel}</h1>\r\n\r\n      <div className=\"wod-section\">\r\n        <h2>Workout of the Day</h2>\r\n        <p>{wod}</p>\r\n      </div>\r\n\r\n      <div className=\"form-wrapper\">\r\n        <form className=\"form\">\r\n          <h2>Enter Your 1 Rep Max</h2>\r\n          {Object.keys(oneRepMax).map((key) => (\r\n            <div className=\"form-group\" key={key}>\r\n              <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)} 1RM</label>\r\n              <input\r\n                id={key}\r\n                type=\"number\"\r\n                className=\"small-input\"\r\n                onChange={handleChange}\r\n                placeholder={`e.g., ${key === 'snatch' ? 155 : 225}`}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n          <h2>Main Movement</h2>\r\n          {renderLift(mainFocus.charAt(0).toUpperCase() + mainFocus.slice(1), mainFocus)}\r\n\r\n          <h2>Olympic Movement</h2>\r\n          {renderLift(olympicFocus.charAt(0).toUpperCase() + olympicFocus.slice(1), olympicFocus)}\r\n\r\n          <h2>Accessory Work</h2>\r\n          <ul>\r\n            {accessories.map((acc, idx) => (\r\n              <li key={idx}>{acc}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"submit-button\"\r\n            onClick={markDayComplete}\r\n          >\r\n            Complete Day\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {showInstallButton && (\r\n        <button onClick={handleInstallClick} style={{ position: 'fixed', bottom: 20, right: 20 }}>\r\n          Install App\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","declare var process: {\r\n  env: {\r\n    PUBLIC_URL: string;\r\n  };\r\n};\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  window.location.hostname === '[::1]' ||\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${(window as any).location.origin}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first.');\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (!installingWorker) return;\r\n\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log('New content is available; it will be used once all tabs are closed.');\r\n              config?.onUpdate?.(registration);\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n              config?.onSuccess?.(registration);\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && !contentType.includes('javascript'))\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App'; // <-- now properly imports App.tsx\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}