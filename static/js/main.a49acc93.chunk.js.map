{"version":3,"sources":["App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["getRandomItems","arr","count","sort","Math","random","slice","mainLifts","olympicLifts","weeks","week","type","percent","reps","percents","AccessoryItem","_ref","accessory","showDetail","setShowDetail","useState","React","createElement","name","description","onClick","prev","style","marginLeft","marginTop","instructions","video","href","target","rel","App","mainFocus","setMainFocus","olympicFocus","setOlympicFocus","completedDays","setCompletedDays","saved","localStorage","getItem","JSON","parse","Array","fill","currentDay","setCurrentDay","savedOneRepMax","oneRepMax","setOneRepMax","squat","bench","deadlift","press","clean","snatch","accessoryPool","setAccessoryPool","useEffect","fetch","then","res","json","data","catch","err","console","error","deferredPrompt","setDeferredPrompt","showInstallButton","setShowInstallButton","showIOSTooltip","setShowIOSTooltip","showDisclaimerModal","setShowDisclaimerModal","selectedAccessories","todayLabel","charAt","toUpperCase","length","calculateWeight","lift","round","renderLift","liftKey","backoff","className","split","Fragment","margin","fontSize","setItem","map","_","idx","today","Date","date","setDate","getDate","getDay","dayLabel","toLocaleDateString","undefined","weekday","dateLabel","month","day","key","cleared","stringify","Object","keys","htmlFor","id","onChange","e","value","updated","[object Object]","parseInt","placeholder","acc","prompt","userChoice","position","bottom","right","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","_config$onUpdate","_config$onSuccess","state","controller","log","onUpdate","call","onSuccess","ReactDOM","createRoot","document","getElementById","render","StrictMode","addEventListener","origin","headers","Service-Worker","response","contentType","get","status","includes","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oLAIA,MAAMA,EAAiBA,CAAKC,EAAUC,KAEpC,MADiB,IAAID,GAAKE,KAAK,IAAM,GAAMC,KAAKC,UAChCC,MAAM,EAAGJ,IAGrBK,EAAY,CAAC,QAAS,QAAS,WAAY,SAC3CC,EAAe,CAAC,QAAS,UAEzBC,EAAQ,CACZ,CAAEC,KAAM,EAAGC,KAAM,OAAQC,QAAS,GAAKC,KAAM,OAC7C,CAAEH,KAAM,EAAGC,KAAM,OAAQC,QAAS,IAAMC,KAAM,OAC9C,CAAEH,KAAM,EAAGC,KAAM,OAAQC,QAAS,GAAKC,KAAM,OAC7C,CAAEH,KAAM,EAAGC,KAAM,OAAQG,SAAU,CAAC,IAAM,IAAM,IAAM,IAAM,GAAK,KAAOD,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,QAClH,CAAEH,KAAM,EAAGC,KAAM,OAAQC,QAAS,IAAMC,KAAM,OAC9C,CAAEH,KAAM,EAAGC,KAAM,OAAQG,SAAU,CAAC,IAAM,GAAK,IAAM,GAAK,IAAM,KAAOD,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,QACjH,CAAEH,KAAM,EAAGC,KAAM,OAAQC,QAAS,IAAMC,KAAM,OAC9C,CAAEH,KAAM,EAAGC,KAAM,SAAUC,QAAS,GAAKC,KAAM,QAoM3CE,EAAsHC,IAAmB,IAAlBC,UAAEA,GAAWD,EACxI,MAAOE,EAAYC,GAAiBC,oBAAS,GAC7C,OACEC,IAAAC,cAAA,UACED,IAAAC,cAAA,cAASL,EAAUM,KAAK,WAAIN,EAAUO,aACtCH,IAAAC,cAAA,UACEX,KAAK,SACLc,QAASA,IAAMN,EAAcO,IAASA,GACtCC,MAAO,CAAEC,WAAY,WAEpBV,EAAa,OAAS,OAAO,iBAE/BA,GACCG,IAAAC,cAAA,OAAKK,MAAO,CAAEE,UAAW,YACvBR,IAAAC,cAAA,SAAIL,EAAUa,cACbb,EAAUc,OACTV,IAAAC,cAAA,KAAGU,KAAMf,EAAUc,MAAOE,OAAO,SAASC,IAAI,uBAAsB,iBAUjEC,MA3NOA,KACpB,MAAOC,EAAWC,GAAgBjB,mBAAiB,IAAMpB,EAAeO,EAAW,GAAG,KAC/E+B,EAAcC,GAAmBnB,mBAAiB,IAAMpB,EAAeQ,EAAc,GAAG,KACxFgC,EAAeC,GAAoBrB,mBAAoB,KAC5D,MAAMsB,EAAQC,aAAaC,QAAQ,iBACnC,OAAOF,EAAQG,KAAKC,MAAMJ,GAASK,MAAM,GAAGC,MAAK,MAG5CC,EAAYC,GAAiB9B,mBAAiB,GAE/C+B,EAAiBR,aAAaC,QAAQ,cACrCQ,EAAWC,GAAgBjC,mBAChC+B,EAAiBN,KAAKC,MAAMK,GAAkB,CAC5CG,MAAO,EAAGC,MAAO,EAAGC,SAAU,EAAGC,MAAO,EAAGC,MAAO,EAAGC,OAAQ,KAG1DC,EAAeC,GAAoBzC,mBAAwF,IAElI0C,oBAAU,KACRC,MAAM,0BACHC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQN,EAAiBM,IAC9BC,MAAMC,GAAOC,QAAQC,MAAM,iCAAkCF,KAC/D,IAIH,MAAOG,EAAgBC,GAAqBrD,mBAAuB,OAC5DsD,EAAmBC,GAAwBvD,oBAAS,IACpDwD,EAAgBC,GAAqBzD,oBAAS,IAC9C0D,EAAqBC,GAA0B3D,mBAAS,KAAOuB,aAAaC,QAAQ,uBAIrFoC,EAAsBhF,EAAe4D,EAAe,GAOpDqB,KAAgB7C,EAAU8C,OAAO,GAAGC,cAAgB/C,EAAU9B,MAAM,WACpEI,EAAOD,EAAMwC,EAAaxC,EAAM2E,QAEhCC,EAAkBA,CAACzE,EAAiB0E,OAA4BlF,KAAKmF,MAAMnC,EAAUkC,GAAQ1E,YAAkBR,KAAKmF,MAAgB,IAAV3E,MAE1H4E,EAAaA,CAACjE,EAAckE,KAChC,GAA4B,kBAAjB/E,EAAKE,SAA6C,kBAAdF,EAAKG,KAAmB,OAAO,KAC9E,MAAM6E,EAAUhF,EAAKE,QAAU,IAC/B,OACES,IAAAC,cAAA,OAAKqE,UAAU,cACbtE,IAAAC,cAAA,aAAQC,EAAK,WAAIb,EAAKG,KAAK,MAAIT,KAAKmF,MAAqB,IAAf7E,EAAKE,SAAe,KAC9DS,IAAAC,cAAA,SAAG,YAAU+D,EAAgB3E,EAAKE,QAAS6E,IAC3CpE,IAAAC,cAAA,SAAG,mBAAiBZ,EAAKG,KAAK+E,MAAM,KAAK,GAAG,MAAIP,EAAgBK,EAASD,MAK/E,OACEpE,IAAAC,cAAAD,IAAAwE,SAAA,KACGjB,GACCvD,IAAAC,cAAA,OAAKqE,UAAU,eACbtE,IAAAC,cAAA,cAAQ,mBACRD,IAAAC,cAAA,KAAGK,MAAO,CAAEmE,OAAQ,IAAK,sBAAmBzE,IAAAC,cAAA,QAAMK,MAAO,CAAEoE,SAAU,UAAW,gBAAS,eAAY1E,IAAAC,cAAA,cAAQ,wBAA6B,KAC1ID,IAAAC,cAAA,UAAQG,QAASA,IAAMoD,GAAkB,GAAQlD,MAAO,CAAEE,UAAW,WAAY,UAGpFiD,GACCzD,IAAAC,cAAA,OAAKqE,UAAU,iBACbtE,IAAAC,cAAA,OAAKqE,UAAU,iBACbtE,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,SAAG,iPAGHD,IAAAC,cAAA,UAAQG,QAASA,KACfkB,aAAaqD,QAAQ,qBAAsB,QAC3CjB,GAAuB,KACtB,oBAKPD,GACAzD,IAAAC,cAAA,OAAKqE,UAAU,iBACbtE,IAAAC,cAAA,OAAKqE,UAAU,iBACbtE,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,OAAKqE,UAAU,gBACZ,IAAI5C,MAAM,IAAIkD,IAAI,CAACC,EAAGC,KACrB,MAAMC,EAAQ,IAAIC,KACZC,EAAO,IAAID,KAAKD,GACtBE,EAAKC,QAAQH,EAAMI,UAAYJ,EAAMK,SAAWN,GAChD,MAAMO,EAAWJ,EAAKK,wBAAmBC,EAAW,CAAEC,QAAS,UACzDC,EAAYR,EAAKK,wBAAmBC,EAAW,CAAEG,MAAO,QAASC,IAAK,YAC5E,OACE3F,IAAAC,cAAA,OACE2F,IAAKd,EACLR,iCAAkCnD,EAAc2D,GAAO,YAAc,KACrE1E,QAASA,IAAMyB,EAAciD,IAE7B9E,IAAAC,cAAA,WAAMoF,GACNrF,IAAAC,cAAA,WAAMwF,QAOhBzF,IAAAC,cAAA,MAAIqE,UAAU,aAAY,qBAAmB1C,EAAa,EAAE,WAAIgC,GAIhE5D,IAAAC,cAAA,OAAKqE,UAAU,gBACbtE,IAAAC,cAAA,QAAMqE,UAAU,QACdtE,IAAAC,cAAA,UAAI,wBACJD,IAAAC,cAAA,UACEX,KAAK,SACLgF,UAAU,eACVlE,QAASA,KACP,MAAMyF,EAAU,CACd5D,MAAO,EAAGC,MAAO,EAAGC,SAAU,EAAGC,MAAO,EAAGC,MAAO,EAAGC,OAAQ,GAE/DN,EAAa6D,GACbvE,aAAaqD,QAAQ,YAAanD,KAAKsE,UAAUD,MAEpD,cAGAE,OAAOC,KAAKjE,GAAW6C,IAAIgB,GAC1B5F,IAAAC,cAAA,OAAKqE,UAAU,aAAasB,IAAKA,GAC/B5F,IAAAC,cAAA,SAAOgG,QAASL,GAAMA,EAAI/B,OAAO,GAAGC,cAAgB8B,EAAI3G,MAAM,GAAG,QACjEe,IAAAC,cAAA,SACEiG,GAAIN,EACJtG,KAAK,SACLgF,UAAU,cACV6B,SAAWC,IACX,MAAMF,GAAEA,EAAEG,MAAEA,GAAUD,EAAExF,OAClB0F,EAAU,IAAKvE,EAAWwE,CAACL,GAAKM,SAASH,IAAU,GACzDrE,EAAasE,GACbhF,aAAaqD,QAAQ,YAAanD,KAAKsE,UAAUQ,KAEjDD,MAAOtE,EAAU6D,GACjBa,qBAA8B,WAARb,EAAmB,IAAM,UAKrD5F,IAAAC,cAAA,UAAI,iBACHkE,EAAWpD,EAAWA,GAEvBf,IAAAC,cAAA,UAAI,oBACHkE,EAAWlD,EAAcA,GAE1BjB,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,UACG0D,EAAoBiB,IAAI,CAAC8B,EAAK5B,IAC7B9E,IAAAC,cAACP,EAAa,CAACkG,IAAKd,EAAKlF,UAAW8G,MAIxC1G,IAAAC,cAAA,UAAQX,KAAK,SAASgF,UAAU,gBAAgBlE,QAASA,KACvDgB,EAAiBf,IACf,MAAMiG,EAAU,IAAIjG,GAEpB,OADAiG,EAAQ1E,EAAa,IAAK,EACnB0E,IAETzE,EAAcxB,GAAQA,EAAO,KAC5B,kBAMNgD,GACCrD,IAAAC,cAAA,UAAQG,QAASA,KACV+C,GAIJA,EAAuBwD,SACvBxD,EAAuByD,WAAWjE,KAAK,KACtCS,EAAkB,MAClBE,GAAqB,MANrBE,GAAkB,IAQnBlD,MAAO,CAAEuG,SAAU,QAASC,OAAQ,GAAIC,MAAO,KAAM,wBCxMpE,MAAMC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UACa,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MACvB,2DA0BJ,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACT5E,KAAKiF,IACJA,EAAaC,cAAgB,MAC3B,MAAMC,EAAmBF,EAAaG,WACjCD,IAELA,EAAiBE,cAAgB,MAEW,IAAAC,EAGjCC,EAJsB,cAA3BJ,EAAiBK,QACfV,UAAUC,cAAcU,YAC1BnF,QAAQoF,IAAI,uEACN,OAANb,QAAM,IAANA,GAAgB,QAAVS,EAANT,EAAQc,gBAAQ,IAAAL,GAAhBA,EAAAM,KAAAf,EAAmBI,KAEnB3E,QAAQoF,IAAI,sCACN,OAANb,QAAM,IAANA,GAAiB,QAAXU,EAANV,EAAQgB,iBAAS,IAAAN,GAAjBA,EAAAK,KAAAf,EAAoBI,YAM7B7E,MAAMG,IACLD,QAAQC,MAAM,4CAA6CA,KAvC1D,IAAkBsE,ECbZiB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7I,IAAAC,cAACD,IAAM8I,WAAU,KACf9I,IAAAC,cAACa,EAAG,QDWF,kBAAmB2G,WACrBP,OAAO6B,iBAAiB,OAAQ,KAC9B,MAAMxB,KAAYL,OAAeC,SAAS6B,2BAEtChC,GAsCV,SAAiCO,EAAeC,GAC9C9E,MAAM6E,EAAO,CAAE0B,QAAS,CAAEC,iBAAkB,YACzCvG,KAAKwG,IACJ,MAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAAwBA,EAAYG,SAAS,cAE9C9B,UAAUC,cAAc8B,MAAM7G,KAAKiF,IACjCA,EAAa6B,aAAa9G,KAAK,KAC7BuE,OAAOC,SAASuC,aAIpBpC,EAAgBC,EAAOC,KAG1BzE,MAAM,KACLE,QAAQoF,IAAI,6DAvDVsB,CAAwBpC,EAAOC,GAC/BC,UAAUC,cAAc8B,MAAM7G,KAAK,KACjCM,QAAQoF,IAAI,gDAGdf,EAAgBC,EAAOC","file":"static/js/main.a49acc93.chunk.js","sourcesContent":["// App.tsx (Full Updated Script)\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nconst getRandomItems = <T,>(arr: T[], count: number): T[] => {\r\n  const shuffled = [...arr].sort(() => 0.5 - Math.random());\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\nconst mainLifts = ['squat', 'bench', 'deadlift', 'press'];\r\nconst olympicLifts = ['clean', 'snatch'];\r\n\r\nconst weeks = [\r\n  { week: 1, type: 'base', percent: 0.7, reps: '4x6' },\r\n  { week: 2, type: 'base', percent: 0.75, reps: '4x5' },\r\n  { week: 3, type: 'base', percent: 0.8, reps: '4x4' },\r\n  { week: 4, type: 'wave', percents: [0.75, 0.77, 0.84, 0.87, 0.8, 0.75], reps: ['1x7', '1x5', '1x3', '1x3', '1x5', '1x7'] },\r\n  { week: 5, type: 'base', percent: 0.82, reps: '3x3' },\r\n  { week: 6, type: 'wave', percents: [0.77, 0.8, 0.86, 0.9, 0.82, 0.77], reps: ['1x7', '1x5', '1x3', '1x2', '1x4', '1x6'] },\r\n  { week: 7, type: 'base', percent: 0.85, reps: '3x2' },\r\n  { week: 8, type: 'deload', percent: 0.6, reps: '3x5' },\r\n];\r\n\r\nconst App: React.FC = () => {\r\n  const [mainFocus, setMainFocus] = useState<string>(() => getRandomItems(mainLifts, 1)[0]);\r\n  const [olympicFocus, setOlympicFocus] = useState<string>(() => getRandomItems(olympicLifts, 1)[0]);\r\n  const [completedDays, setCompletedDays] = useState<boolean[]>(() => {\r\n    const saved = localStorage.getItem('completedDays');\r\n    return saved ? JSON.parse(saved) : Array(7).fill(false);\r\n  });\r\n\r\n  const [currentDay, setCurrentDay] = useState<number>(0);\r\n\r\n  const savedOneRepMax = localStorage.getItem('oneRepMax');\r\n  const [oneRepMax, setOneRepMax] = useState<Record<string, number>>(\r\n    savedOneRepMax ? JSON.parse(savedOneRepMax) : {\r\n      squat: 0, bench: 0, deadlift: 0, press: 0, clean: 0, snatch: 0,\r\n    }\r\n  );\r\n  const [accessoryPool, setAccessoryPool] = useState<{ name: string; description: string; instructions: string; video?: string }[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/data/accessories.json')\r\n      .then(res => res.json())\r\n      .then(data => setAccessoryPool(data))\r\n      .catch(err => console.error('Failed to load accessory data:', err));\r\n  }, []);\r\n\r\n  \r\n  \r\n  const [deferredPrompt, setDeferredPrompt] = useState<Event | null>(null);\r\n  const [showInstallButton, setShowInstallButton] = useState(false);\r\n  const [showIOSTooltip, setShowIOSTooltip] = useState(false);\r\n  const [showDisclaimerModal, setShowDisclaimerModal] = useState(() => !localStorage.getItem('disclaimerAccepted'));\r\n\r\n  \r\n\r\n  const selectedAccessories = getRandomItems(accessoryPool, 3);\r\n  \r\n\r\n  \r\n\r\n  \r\n  \r\n  const todayLabel = `${mainFocus.charAt(0).toUpperCase() + mainFocus.slice(1)} Focus`;\r\n  const week = weeks[currentDay % weeks.length];\r\n\r\n  const calculateWeight = (percent: number, lift: string): string => `${Math.round(oneRepMax[lift] * percent)} lbs @ ${Math.round(percent * 100)}%`;\r\n\r\n  const renderLift = (name: string, liftKey: string) => {\r\n    if (typeof week.percent !== 'number' || typeof week.reps !== 'string') return null;\r\n    const backoff = week.percent - 0.05;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{name} – {week.reps} @ {Math.round(week.percent * 100)}%</label>\r\n        <p>Top Set: {calculateWeight(week.percent, liftKey)}</p>\r\n        <p>Backoff Sets: 2x{week.reps.split('x')[1]} @ {calculateWeight(backoff, liftKey)}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showIOSTooltip && (\r\n        <div className=\"ios-tooltip\">\r\n          <strong>Install on iOS:</strong>\r\n          <p style={{ margin: 0 }}>Tap the Share icon <span style={{ fontSize: '1.2em' }}>📤</span> and select <strong>\"Add to Home Screen\"</strong>.</p>\r\n          <button onClick={() => setShowIOSTooltip(false)} style={{ marginTop: '0.5rem' }}>Close</button>\r\n        </div>\r\n      )}\r\n      {showDisclaimerModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h2>Disclaimer</h2>\r\n            <p>\r\n              This app is not intended for beginners. Use at your own risk. Always consult a qualified coach or physician before beginning any training program. The developer assumes no responsibility for injury or harm resulting from use of this app.\r\n            </p>\r\n            <button onClick={() => {\r\n              localStorage.setItem('disclaimerAccepted', 'true');\r\n              setShowDisclaimerModal(false);\r\n            }}>I Acknowledge</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!showDisclaimerModal && (\r\n        <div className=\"app-container\">\r\n          <div className=\"calendar-view\">\r\n            <h3>This Week</h3>\r\n            <div className=\"calendar-row\">\r\n              {[...Array(7)].map((_, idx) => {\r\n                const today = new Date();\r\n                const date = new Date(today);\r\n                date.setDate(today.getDate() - today.getDay() + idx);\r\n                const dayLabel = date.toLocaleDateString(undefined, { weekday: 'short' });\r\n                const dateLabel = date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    className={`calendar-day-square ${completedDays[idx] ? 'completed' : ''}`}\r\n                    onClick={() => setCurrentDay(idx)}\r\n                  >\r\n                    <div>{dayLabel}</div>\r\n                    <div>{dateLabel}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <h1 className=\"app-title\">Strength App: Day {currentDay + 1} – {todayLabel}</h1>\r\n\r\n          \r\n\r\n          <div className=\"form-wrapper\">\r\n            <form className=\"form\">\r\n              <h2>Enter Your 1 Rep Max</h2>\r\n              <button\r\n                type=\"button\"\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                  const cleared = {\r\n                    squat: 0, bench: 0, deadlift: 0, press: 0, clean: 0, snatch: 0,\r\n                  };\r\n                  setOneRepMax(cleared);\r\n                  localStorage.setItem('oneRepMax', JSON.stringify(cleared));\r\n                }}\r\n              >\r\n                Reset 1RMs\r\n              </button>\r\n              {Object.keys(oneRepMax).map(key => (\r\n                <div className=\"form-group\" key={key}>\r\n                  <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)} 1RM</label>\r\n                  <input\r\n                    id={key}\r\n                    type=\"number\"\r\n                    className=\"small-input\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    const { id, value } = e.target;\r\n                    const updated = { ...oneRepMax, [id]: parseInt(value) || 0 };\r\n                    setOneRepMax(updated);\r\n                    localStorage.setItem('oneRepMax', JSON.stringify(updated));\r\n                  }}\r\n                    value={oneRepMax[key]}\r\n                    placeholder={`e.g., ${key === 'snatch' ? 155 : 225}`}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <h2>Main Movement</h2>\r\n              {renderLift(mainFocus, mainFocus)}\r\n\r\n              <h2>Olympic Movement</h2>\r\n              {renderLift(olympicFocus, olympicFocus)}\r\n\r\n              <h2>Accessory Work</h2>\r\n              <ul>\r\n                {selectedAccessories.map((acc, idx) => (\r\n                  <AccessoryItem key={idx} accessory={acc} />\r\n                ))}\r\n              </ul>\r\n\r\n              <button type=\"button\" className=\"submit-button\" onClick={() => {\r\n                setCompletedDays(prev => {\r\n                  const updated = [...prev];\r\n                  updated[currentDay % 7] = true;\r\n                  return updated;\r\n                });\r\n                setCurrentDay(prev => prev + 1);\r\n              }}>\r\n                Complete Day\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          {showInstallButton && (\r\n            <button onClick={() => {\r\n              if (!deferredPrompt) {\r\n                setShowIOSTooltip(true);\r\n                return;\r\n              }\r\n              (deferredPrompt as any).prompt();\r\n              (deferredPrompt as any).userChoice.then(() => {\r\n                setDeferredPrompt(null);\r\n                setShowInstallButton(false);\r\n              });\r\n            }} style={{ position: 'fixed', bottom: 20, right: 20 }}>\r\n              Install App\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst AccessoryItem: React.FC<{ accessory: { name: string; description: string; instructions: string; video?: string } }> = ({ accessory }) => {\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  return (\r\n    <li>\r\n      <strong>{accessory.name} – {accessory.description}</strong>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setShowDetail(prev => !prev)}\r\n        style={{ marginLeft: '0.5rem' }}\r\n      >\r\n        {showDetail ? 'Hide' : 'Show'} Instructions\r\n      </button>\r\n      {showDetail && (\r\n        <div style={{ marginTop: '0.25rem' }}>\r\n          <p>{accessory.instructions}</p>\r\n          {accessory.video && (\r\n            <a href={accessory.video} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Watch Demo\r\n            </a>\r\n          )}\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","declare var process: {\r\n  env: {\r\n    PUBLIC_URL: string;\r\n  };\r\n};\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  window.location.hostname === '[::1]' ||\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${(window as any).location.origin}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first.');\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (!installingWorker) return;\r\n\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log('New content is available; it will be used once all tabs are closed.');\r\n              config?.onUpdate?.(registration);\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n              config?.onSuccess?.(registration);\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && !contentType.includes('javascript'))\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App'; // <-- now properly imports App.tsx\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}