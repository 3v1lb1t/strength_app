{"version":3,"sources":["App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["mainLifts","olympicLifts","accessoryPool","weeks","week","type","percent","reps","percents","App","savedOneRepMax","localStorage","getItem","oneRepMax","setOneRepMax","useState","JSON","parse","squat","bench","deadlift","press","clean","snatch","currentDay","setCurrentDay","completedDays","setCompletedDays","saved","Array","fill","wod","setWod","deferredPrompt","setDeferredPrompt","showInstallButton","setShowInstallButton","showDisclaimerModal","setShowDisclaimerModal","useEffect","window","addEventListener","e","preventDefault","setItem","stringify","fetch","headers","Authorization","then","res","json","data","_data$data","_data$data$","workout","description","catch","handleChange","id","value","target","updated","[object Object]","parseInt","calculateWeight","lift","Math","round","mainFocus","length","olympicFocus","accessories","getRandomItems","arr","count","sort","random","slice","todayLabel","charAt","toUpperCase","renderLift","name","liftKey","backoff","React","createElement","className","split","Fragment","onClick","handleAcknowledgeDisclaimer","map","_","idx","today","Date","date","setDate","getDate","getDay","dayLabel","toLocaleDateString","undefined","weekday","dateLabel","month","day","key","cleared","Object","keys","htmlFor","onChange","placeholder","acc","markDayComplete","prev","prompt","userChoice","style","position","bottom","right","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","_config$onUpdate","_config$onSuccess","state","controller","console","log","onUpdate","call","onSuccess","error","ReactDOM","createRoot","document","getElementById","render","StrictMode","origin","Service-Worker","response","contentType","get","status","includes","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b0bd3bc9.chunk.js","sourcesContent":["// App.tsx (Full Updated Script)\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nconst mainLifts = ['squat', 'bench', 'deadlift', 'press'];\r\nconst olympicLifts = ['clean', 'snatch'];\r\nconst accessoryPool: string[] = [\r\n  'Overhead Press – 3x8 (barbell) @ light to moderate weight',\r\n  'Dumbbell Bench Press – 3x12 @ light to moderate',\r\n  'Incline Bench Press - 3x10 @ light to moderate',\r\n  'Dumbbell Incline Bench - 3x10 @ light to moderate',\r\n  'Chin-ups – 3xMax',\r\n  'Pull-ups – 3xMax',\r\n  'Renegade Rows – 3x10',\r\n  'Russian Twists – 3x20',\r\n  'Plate Overhead Lunge – 2x10/leg',\r\n  'Goblet Squat – 3x12',\r\n  'Bodyweight Dips – 3xMax',\r\n  'Burpee to Renegade Row – 3x10',\r\n  'Dumbbell Lunges – 3x12',\r\n  'Kettlebell Front rack lunge 3x10',\r\n  'Farmers Carry 3x100m',\r\n  'Plank Rows – 3x10',\r\n  'Overhead Plate Carry – 2x30s',\r\n  'Push-ups – 3xMax',\r\n  'Handstand Hold – 3x30sec',\r\n  'Push Press – 3x8 @ moderate weight',\r\n  'Behind Neck (BN) Push Press 3x8 @ moderate weight',\r\n  'Snatch Balance – 5x3 @ light weight',\r\n  'Push Jerk – 3x3 @ moderate weight ',\r\n  'Split Jerk – 3x3 @ moderate weight',\r\n  'L-Sit – 3x10sec',\r\n  'Clean Pulls: 3x10 @ light/moderate weight',\r\n  'Sumo Deadlift High Pulls 3x10 @ light weight',\r\n  'Tabata Burpees 3 rounds',\r\n  'Tabata Pushups 3 rounds'\r\n];\r\n\r\nconst weeks = [\r\n  { week: 1, type: 'base', percent: 0.7, reps: '4x6' },\r\n  { week: 2, type: 'base', percent: 0.75, reps: '4x5' },\r\n  { week: 3, type: 'base', percent: 0.8, reps: '4x4' },\r\n  { week: 4, type: 'wave', percents: [0.75, 0.77, 0.84, 0.87, 0.8, 0.75], reps: ['1x7', '1x5', '1x3', '1x3', '1x5', '1x7'] },\r\n  { week: 5, type: 'base', percent: 0.82, reps: '3x3' },\r\n  { week: 6, type: 'wave', percents: [0.77, 0.8, 0.86, 0.9, 0.82, 0.77], reps: ['1x7', '1x5', '1x3', '1x2', '1x4', '1x6'] },\r\n  { week: 7, type: 'base', percent: 0.85, reps: '3x2' },\r\n  { week: 8, type: 'deload', percent: 0.6, reps: '3x5' },\r\n];\r\n\r\nconst App: React.FC = () => {\r\n  const savedOneRepMax = localStorage.getItem('oneRepMax');\r\n  const [oneRepMax, setOneRepMax] = useState<Record<string, number>>(\r\n    savedOneRepMax ? JSON.parse(savedOneRepMax) : {\r\n      squat: 0, bench: 0, deadlift: 0, press: 0, clean: 0, snatch: 0,\r\n    }\r\n  );\r\n\r\n  const [currentDay, setCurrentDay] = useState<number>(0);\r\n  const [completedDays, setCompletedDays] = useState<boolean[]>(() => {\r\n    const saved = localStorage.getItem('completedDays');\r\n    return saved ? JSON.parse(saved) : Array(7).fill(false);\r\n  });\r\n  const [wod, setWod] = useState<string>('');\r\n  const [deferredPrompt, setDeferredPrompt] = useState<Event | null>(null);\r\n  const [showInstallButton, setShowInstallButton] = useState(false);\r\n  const [showDisclaimerModal, setShowDisclaimerModal] = useState(() => !localStorage.getItem('disclaimerAccepted'));\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('beforeinstallprompt', (e) => {\r\n      e.preventDefault();\r\n      setDeferredPrompt(e);\r\n      setShowInstallButton(true);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('completedDays', JSON.stringify(completedDays));\r\n  }, [completedDays]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.sugarwod.com/v2/workouts?affiliate_id=demo', {\r\n      headers: { 'Authorization': 'Bearer YOUR_API_KEY' }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const workout = data?.data?.[0]?.description || 'No WOD available.';\r\n        setWod(workout);\r\n      })\r\n      .catch(() => setWod('Failed to fetch WOD.'));\r\n  }, []);\r\n\r\n  const handleAcknowledgeDisclaimer = () => {\r\n    localStorage.setItem('disclaimerAccepted', 'true');\r\n    setShowDisclaimerModal(false);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { id, value } = e.target;\r\n    const updated = { ...oneRepMax, [id]: parseInt(value) || 0 };\r\n    setOneRepMax(updated);\r\n    localStorage.setItem('oneRepMax', JSON.stringify(updated));\r\n  };\r\n\r\n  const markDayComplete = () => {\r\n    setCompletedDays(prev => {\r\n      const updated = [...prev];\r\n      updated[currentDay % 7] = true;\r\n      return updated;\r\n    });\r\n    setCurrentDay(prev => prev + 1);\r\n  };\r\n\r\n  const calculateWeight = (percent: number, lift: string): string =>\r\n    `${Math.round(oneRepMax[lift] * percent)} lbs @ ${Math.round(percent * 100)}%`;\r\n\r\n  const getRandomItems = (arr: string[], count: number) => {\r\n    const shuffled = [...arr].sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count);\r\n  };\r\n\r\n  const mainFocus = mainLifts[currentDay % mainLifts.length];\r\n  const olympicFocus = olympicLifts[currentDay % olympicLifts.length];\r\n  const accessories = getRandomItems(accessoryPool, 3);\r\n  const todayLabel = `${mainFocus.charAt(0).toUpperCase() + mainFocus.slice(1)} Focus`;\r\n  const week = weeks[currentDay % weeks.length];\r\n\r\n  const renderLift = (name: string, liftKey: string) => {\r\n    if (typeof week.percent !== 'number' || typeof week.reps !== 'string') return null;\r\n    const backoff = week.percent - 0.05;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{name} – {week.reps} @ {Math.round(week.percent * 100)}%</label>\r\n        <p>Top Set: {calculateWeight(week.percent, liftKey)}</p>\r\n        <p>Backoff Sets: 2x{week.reps.split('x')[1]} @ {calculateWeight(backoff, liftKey)}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showDisclaimerModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h2>Disclaimer</h2>\r\n            <p>\r\n              This app is not intended for beginners. Use at your own risk. Always consult a qualified coach or physician before beginning any training program. The developer assumes no responsibility for injury or harm resulting from use of this app.\r\n            </p>\r\n            <button onClick={handleAcknowledgeDisclaimer}>I Acknowledge</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!showDisclaimerModal && (\r\n        <div className=\"app-container\">\r\n          <div className=\"calendar-view\">\r\n            <h3>This Week</h3>\r\n            <div className=\"calendar-row\">\r\n              {[...Array(7)].map((_, idx) => {\r\n                const today = new Date();\r\n                const date = new Date(today);\r\n                date.setDate(today.getDate() - today.getDay() + idx);\r\n                const dayLabel = date.toLocaleDateString(undefined, { weekday: 'short' });\r\n                const dateLabel = date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    className={`calendar-day-square ${completedDays[idx] ? 'completed' : ''}`}\r\n                    onClick={() => setCurrentDay(idx)}\r\n                  >\r\n                    <div>{dayLabel}</div>\r\n                    <div>{dateLabel}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <h1 className=\"app-title\">Strength App: Day {currentDay + 1} – {todayLabel}</h1>\r\n\r\n          <div className=\"wod-section\">\r\n            <h2>Workout of the Day</h2>\r\n            <p>{wod}</p>\r\n          </div>\r\n\r\n          <div className=\"form-wrapper\">\r\n            <form className=\"form\">\r\n              <h2>Enter Your 1 Rep Max</h2>\r\n              <button\r\n                type=\"button\"\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                  const cleared = {\r\n                    squat: 0, bench: 0, deadlift: 0, press: 0, clean: 0, snatch: 0,\r\n                  };\r\n                  setOneRepMax(cleared);\r\n                  localStorage.setItem('oneRepMax', JSON.stringify(cleared));\r\n                }}\r\n              >\r\n                Reset 1RMs\r\n              </button>\r\n              {Object.keys(oneRepMax).map(key => (\r\n                <div className=\"form-group\" key={key}>\r\n                  <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)} 1RM</label>\r\n                  <input\r\n                    id={key}\r\n                    type=\"number\"\r\n                    className=\"small-input\"\r\n                    onChange={handleChange}\r\n                    value={oneRepMax[key]}\r\n                    placeholder={`e.g., ${key === 'snatch' ? 155 : 225}`}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <h2>Main Movement</h2>\r\n              {renderLift(mainFocus, mainFocus)}\r\n\r\n              <h2>Olympic Movement</h2>\r\n              {renderLift(olympicFocus, olympicFocus)}\r\n\r\n              <h2>Accessory Work</h2>\r\n              <ul>{accessories.map((acc, idx) => <li key={idx}>{acc}</li>)}</ul>\r\n\r\n              <button type=\"button\" className=\"submit-button\" onClick={markDayComplete}>\r\n                Complete Day\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          {showInstallButton && (\r\n            <button onClick={() => {\r\n              if (!deferredPrompt) return;\r\n              (deferredPrompt as any).prompt();\r\n              (deferredPrompt as any).userChoice.then(() => {\r\n                setDeferredPrompt(null);\r\n                setShowInstallButton(false);\r\n              });\r\n            }} style={{ position: 'fixed', bottom: 20, right: 20 }}>\r\n              Install App\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","declare var process: {\r\n  env: {\r\n    PUBLIC_URL: string;\r\n  };\r\n};\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  window.location.hostname === '[::1]' ||\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${(window as any).location.origin}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first.');\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (!installingWorker) return;\r\n\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log('New content is available; it will be used once all tabs are closed.');\r\n              config?.onUpdate?.(registration);\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n              config?.onSuccess?.(registration);\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && !contentType.includes('javascript'))\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App'; // <-- now properly imports App.tsx\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}