{"map":"{\"version\":3,\"sources\":[\"C:/Users/mike/OneDrive - Shadowscape/documents/strength_app/src/serviceWorkerRegistration.ts\",\"C:/Users/mike/OneDrive - Shadowscape/documents/strength_app/src/index.js\"],\"names\":[\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"_config$onUpdate\",\"_config$onSuccess\",\"state\",\"controller\",\"console\",\"log\",\"onUpdate\",\"call\",\"onSuccess\",\"catch\",\"error\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"React\",\"createElement\",\"StrictMode\",\"App\",\"addEventListener\",\"origin\",\"fetch\",\"headers\",\"Service-Worker\",\"response\",\"contentType\",\"get\",\"status\",\"includes\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"0LAMA,MAAMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UACa,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MACvB,2DA0BJ,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,KAAKC,IACJA,EAAaC,cAAgB,MAC3B,MAAMC,EAAmBF,EAAaG,WACjCD,IAELA,EAAiBE,cAAgB,MAEW,IAAAC,EAGjCC,EAJsB,cAA3BJ,EAAiBK,QACfX,UAAUC,cAAcW,YAC1BC,QAAQC,IAAI,uEACN,OAANf,QAAM,IAANA,GAAgB,QAAVU,EAANV,EAAQgB,gBAAQ,IAAAN,GAAhBA,EAAAO,KAAAjB,EAAmBK,KAEnBS,QAAQC,IAAI,sCACN,OAANf,QAAM,IAANA,GAAiB,QAAXW,EAANX,EAAQkB,iBAAS,IAAAP,GAAjBA,EAAAM,KAAAjB,EAAoBK,YAM7Bc,MAAMC,IACLN,QAAQM,MAAM,4CAA6CA,KAvC1D,IAAkBpB,ECbZqB,EAAAA,EAASC,WAAWC,SAASC,eAAe,SACpDC,OACHC,EAAAA,EAAAC,cAACD,EAAAA,EAAME,WAAU,KACfF,EAAAA,EAAAC,mBAACE,EAAG,QDWF,kBAAmB5B,WACrBP,OAAOoC,iBAAiB,OAAQ,KAC9B,MAAM/B,KAAYL,OAAeC,SAASoC,2BAEtCvC,GAsCV,SAAiCO,EAAeC,GAC9CgC,MAAMjC,EAAO,CAAEkC,QAAS,CAAEC,iBAAkB,YACzC9B,KAAK+B,IACJ,MAAMC,EAAcD,EAASF,QAAQI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAAwBA,EAAYG,SAAS,cAE9CtC,UAAUC,cAAcsC,MAAMpC,KAAKC,IACjCA,EAAaoC,aAAarC,KAAK,KAC7BV,OAAOC,SAAS+C,aAIpB5C,EAAgBC,EAAOC,KAG1BmB,MAAM,KACLL,QAAQC,IAAI,6DAvDV4B,CAAwB5C,EAAOC,GAC/BC,UAAUC,cAAcsC,MAAMpC,KAAK,KACjCU,QAAQC,IAAI,gDAGdjB,EAAgBC,EAAOC\",\"sourcesContent\":[\"declare var process: {\\r\\n  env: {\\r\\n    PUBLIC_URL: string;\\r\\n  };\\r\\n};\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n  window.location.hostname === '[::1]' ||\\r\\n  window.location.hostname.match(\\r\\n    /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n  )\\r\\n);\\r\\n\\r\\ntype Config = {\\r\\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\\r\\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\\r\\n};\\r\\n\\r\\nexport function register(config?: Config) {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${(window as any).location.origin}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log('This web app is being served cache-first.');\\r\\n        });\\r\\n      } else {\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl: string, config?: Config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (!installingWorker) return;\\r\\n\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              console.log('New content is available; it will be used once all tabs are closed.');\\r\\n              config?.onUpdate?.(registration);\\r\\n            } else {\\r\\n              console.log('Content is cached for offline use.');\\r\\n              config?.onSuccess?.(registration);\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\\r\\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\\r\\n    .then(response => {\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && !contentType.includes('javascript'))\\r\\n      ) {\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log('No internet connection. App is running in offline mode.');\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\nimport './index.css';\\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\nserviceWorkerRegistration.register();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{12:function(e,n,o){},13:function(e,n,o){},14:function(e,n,o){\"use strict\";o.r(n);var t=o(0),r=o.n(t),i=o(2),a=o.n(i);o(12);o(13);const c=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function l(e,n){navigator.serviceWorker.register(e).then(e=>{e.onupdatefound=(()=>{const o=e.installing;o&&(o.onstatechange=(()=>{var t,r;\"installed\"===o.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available; it will be used once all tabs are closed.\"),null===n||void 0===n||null===(t=n.onUpdate)||void 0===t||t.call(n,e)):(console.log(\"Content is cached for offline use.\"),null===n||void 0===n||null===(r=n.onSuccess)||void 0===r||r.call(n,e)))}))})}).catch(e=>{console.error(\"Error during service worker registration:\",e)})}var s;a.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(void 0,null))),\"serviceWorker\"in navigator&&window.addEventListener(\"load\",()=>{const e=`${window.location.origin}/service-worker.js`;c?(function(e,n){fetch(e,{headers:{\"Service-Worker\":\"script\"}}).then(o=>{const t=o.headers.get(\"content-type\");404===o.status||null!=t&&!t.includes(\"javascript\")?navigator.serviceWorker.ready.then(e=>{e.unregister().then(()=>{window.location.reload()})}):l(e,n)}).catch(()=>{console.log(\"No internet connection. App is running in offline mode.\")})}(e,s),navigator.serviceWorker.ready.then(()=>{console.log(\"This web app is being served cache-first.\")})):l(e,s)})},3:function(e,n,o){e.exports=o(14)}},[[3,1,2]]]);","extractedComments":[]}