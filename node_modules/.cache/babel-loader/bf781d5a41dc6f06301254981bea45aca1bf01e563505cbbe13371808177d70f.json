{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mike\\\\OneDrive - Shadowscape\\\\documents\\\\strength_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Strength Program App (Visual Refresh with ShadCN + Tailwind Enhancements)\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardContent } from \"./components/ui/card\";\nimport { Button } from \"./components/ui/button\";\nimport { Textarea } from \"./components/ui/textarea\";\nimport { Input } from \"./components/ui/input\";\nimport { BadgeCheck, Dumbbell } from 'lucide-react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst weeks = Array.from({\n  length: 8\n}, (_, i) => i + 1);\nconst days = [\"Day 1\", \"Day 2\", \"Day 3\"];\nconst LIFT_INPUTS = [{\n  key: 'squat',\n  label: 'Back Squat 1RM'\n}, {\n  key: 'bench',\n  label: 'Paused Bench Press 1RM'\n}, {\n  key: 'deadlift',\n  label: 'Deadlift 1RM'\n}, {\n  key: 'clean',\n  label: 'Power Clean 1RM'\n}, {\n  key: 'snatch',\n  label: 'Power Snatch 1RM'\n}];\nconst WAVE_SET_WEEK = 5;\nconst WAVE_SETS = [75, 77, 84, 87, 80, 75];\nconst OLY_PERCENTAGES = [0.7, 0.72, 0.74, 0.76, 0.78, 0.8, 0.82, 0.85];\nconst getAccessoryWork = (week, dayIdx) => {\n  const upper = [\"Push-ups: 3x20\", \"Chin-ups: 3xMax\", \"Dumbbell Bench Press: 3x12\", \"Arnold Press: 3x10\", \"Bent-over Rows (Barbell): 3x10\"];\n  const lower = [\"Goblet Squats: 3x15\", \"Walking Lunges: 3x12 each leg\", \"Bulgarian Split Squat: 3x8\", \"Dumbbell Step-ups: 3x10 each leg\", \"Barbell Hip Thrusts: 3x12\"];\n  const core = [\"Plank: 3x30s\", \"V-ups: 3x15\", \"Hanging Knee Raises: 3x12\", \"Russian Twists (plate): 3x20\", \"Barbell Rollouts: 3x10\"];\n  const cardio = [\"Jump Rope: 3x1min\", \"Burpees: 3x10\", \"Mountain Climbers: 3x30s\", \"Jump Squats: 3x12\", \"Farmer's Carry (Dumbbells): 3x40ft\"];\n  const groups = [upper, lower, core, cardio];\n  const seed = (week * 3 + dayIdx) % groups.length;\n  const accessories = [];\n  for (let i = 0; i < 2; i++) {\n    const group = groups[(seed + i) % groups.length];\n    const exercise = group[(week + dayIdx + i * 3) % group.length];\n    accessories.push(exercise);\n  }\n  return accessories;\n};\nexport default function StrengthApp() {\n  _s();\n  const [rms, setRms] = useState({\n    squat: 315,\n    bench: 225,\n    deadlift: 365,\n    clean: 185,\n    snatch: 135\n  });\n  const [log, setLog] = useState({});\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [weekIdx, setWeekIdx] = useState(0);\n  const [dayIdx, setDayIdx] = useState(0);\n  const [completedDays, setCompletedDays] = useState([]);\n  const updateRM = (lift, val) => setRms({\n    ...rms,\n    [lift]: parseFloat(val || 0)\n  });\n  const formatWeight = (percent, rm) => Math.round(percent * rm);\n  const runAssistant = async () => {\n    var _data$choices, _data$choices$, _data$choices$$messag;\n    setLoading(true);\n    const body = {\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: \"You are a strength coach.\"\n      }, {\n        role: \"user\",\n        content: prompt\n      }],\n      temperature: 0.7\n    };\n    const res = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer YOUR_OPENAI_API_KEY`\n      },\n      body: JSON.stringify(body)\n    });\n    const data = await res.json();\n    setResponse(((_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || \"No response.\");\n    setLoading(false);\n  };\n  const weeks = Array.from({\n    length: 8\n  }, (_, i) => i + 1);\n  const days = [\"Day 1\", \"Day 2\", \"Day 3\"];\n  const currentWeek = weeks[weekIdx];\n  const currentDay = days[dayIdx];\n  const liftOrder = [\"squat\", \"bench\", \"deadlift\"];\n  const mainLift = liftOrder[(currentWeek + dayIdx) % 3];\n  const mainRM = rms[mainLift];\n  const olympicLift = dayIdx === 0 ? \"clean\" : dayIdx === 1 ? \"snatch\" : null;\n  const olympicRM = olympicLift ? rms[olympicLift] : 0;\n  const accessories = getAccessoryWork(currentWeek, dayIdx);\n  const handleCalendarClick = (w, d) => {\n    setWeekIdx(w - 1);\n    setDayIdx(d);\n  };\n  const nextDay = () => {\n    const key = `${currentWeek}-${currentDay}`;\n    setCompletedDays([...completedDays, key]);\n    if (dayIdx < 2) {\n      setDayIdx(dayIdx + 1);\n    } else if (weekIdx < 7) {\n      setWeekIdx(weekIdx + 1);\n      setDayIdx(0);\n    }\n  };\n  const getPhaseColor = week => {\n    if (week < 3) return 'bg-blue-200';\n    if (week < 5) return 'bg-yellow-200';\n    if (week === 5) return 'bg-orange-200';\n    if (week < 8) return 'bg-red-200';\n    return 'bg-green-200';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"text-xl font-bold\",\n        children: \"Progress Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-2\",\n          children: weeks.map(w => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border rounded p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold mb-1\",\n              children: [\"Week \", w]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col gap-1\",\n              children: days.map((d, i) => {\n                const key = `${w}-${d}`;\n                const complete = completedDays.includes(key);\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `text-sm p-1 rounded ${getPhaseColor(w)} ${complete ? 'border border-green-600' : ''}`,\n                  onClick: () => handleCalendarClick(w, i),\n                  children: d\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, w, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"text-xl font-semibold\",\n        children: \"Enter Your 1RMs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"grid gap-3\",\n        children: LIFT_INPUTS.map(({\n          key,\n          label\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-sm font-medium\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            value: rms[key] || '',\n            onChange: e => updateRM(key, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"text-xl font-semibold flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Dumbbell, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), \" Week \", currentWeek, \" \\u2013 \", currentDay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Main Lift:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 14\n          }, this), \" \", mainLift.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), currentWeek === WAVE_SET_WEEK ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Wave Set Weights:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 16\n          }, this), \" \", WAVE_SETS.map(p => `${p}%: ${formatWeight(p / 100, mainRM)} lbs`).join(\" | \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Top Set:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 18\n            }, this), \" \", formatWeight(0.75 + currentWeek * 0.015, mainRM), \" lbs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Backoff Set:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 18\n            }, this), \" \", formatWeight(0.7 + currentWeek * 0.01, mainRM), \" lbs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), olympicLift && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [olympicLift.toUpperCase(), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 16\n          }, this), \" \", formatWeight(OLY_PERCENTAGES[currentWeek - 1], olympicRM), \" lbs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold mt-4\",\n            children: \"Accessory Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc list-inside text-sm\",\n            children: accessories.map((work, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: work\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Notes / RPE / Reps Completed\",\n          value: log[`${currentWeek}-${currentDay}`] || '',\n          onChange: e => setLog({\n            ...log,\n            [`${currentWeek}-${currentDay}`]: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: nextDay,\n          className: \"mt-2 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(BadgeCheck, {\n            className: \"mr-2 h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), \" Mark Day as Completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"text-xl font-semibold\",\n        children: \"AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Ask to generate a plan or modify a week...\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: runAssistant,\n          disabled: loading,\n          children: loading ? \"Thinking...\" : \"Generate Plan or Advice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), response && /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-muted p-3 rounded text-sm whitespace-pre-wrap\",\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(StrengthApp, \"R6ZP5h12wdZAaEKptgpgCQaHcgk=\");\n_c = StrengthApp;\nvar _c;\n$RefreshReg$(_c, \"StrengthApp\");","map":{"version":3,"names":["React","useState","Card","CardHeader","CardContent","Button","Textarea","Input","BadgeCheck","Dumbbell","jsxDEV","_jsxDEV","Fragment","_Fragment","weeks","Array","from","length","_","i","days","LIFT_INPUTS","key","label","WAVE_SET_WEEK","WAVE_SETS","OLY_PERCENTAGES","getAccessoryWork","week","dayIdx","upper","lower","core","cardio","groups","seed","accessories","group","exercise","push","StrengthApp","_s","rms","setRms","squat","bench","deadlift","clean","snatch","log","setLog","prompt","setPrompt","response","setResponse","loading","setLoading","weekIdx","setWeekIdx","setDayIdx","completedDays","setCompletedDays","updateRM","lift","val","parseFloat","formatWeight","percent","rm","Math","round","runAssistant","_data$choices","_data$choices$","_data$choices$$messag","body","model","messages","role","content","temperature","res","fetch","method","headers","Authorization","JSON","stringify","data","json","choices","message","currentWeek","currentDay","liftOrder","mainLift","mainRM","olympicLift","olympicRM","handleCalendarClick","w","d","nextDay","getPhaseColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","complete","includes","onClick","type","value","onChange","e","target","toUpperCase","p","join","work","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/mike/OneDrive - Shadowscape/documents/strength_app/src/App.js"],"sourcesContent":["// Strength Program App (Visual Refresh with ShadCN + Tailwind Enhancements)\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardContent } from \"./components/ui/card\";\nimport { Button } from \"./components/ui/button\";\nimport { Textarea } from \"./components/ui/textarea\";\nimport { Input } from \"./components/ui/input\";\nimport { BadgeCheck, Dumbbell } from 'lucide-react';\nimport './index.css';\n\nconst weeks = Array.from({ length: 8 }, (_, i) => i + 1);\nconst days = [\"Day 1\", \"Day 2\", \"Day 3\"];\n\nconst LIFT_INPUTS = [\n  { key: 'squat', label: 'Back Squat 1RM' },\n  { key: 'bench', label: 'Paused Bench Press 1RM' },\n  { key: 'deadlift', label: 'Deadlift 1RM' },\n  { key: 'clean', label: 'Power Clean 1RM' },\n  { key: 'snatch', label: 'Power Snatch 1RM' }\n];\n\nconst WAVE_SET_WEEK = 5;\nconst WAVE_SETS = [75, 77, 84, 87, 80, 75];\nconst OLY_PERCENTAGES = [0.7, 0.72, 0.74, 0.76, 0.78, 0.8, 0.82, 0.85];\n\nconst getAccessoryWork = (week, dayIdx) => {\n  const upper = [\n    \"Push-ups: 3x20\",\n    \"Chin-ups: 3xMax\",\n    \"Dumbbell Bench Press: 3x12\",\n    \"Arnold Press: 3x10\",\n    \"Bent-over Rows (Barbell): 3x10\"\n  ];\n  const lower = [\n    \"Goblet Squats: 3x15\",\n    \"Walking Lunges: 3x12 each leg\",\n    \"Bulgarian Split Squat: 3x8\",\n    \"Dumbbell Step-ups: 3x10 each leg\",\n    \"Barbell Hip Thrusts: 3x12\"\n  ];\n  const core = [\n    \"Plank: 3x30s\",\n    \"V-ups: 3x15\",\n    \"Hanging Knee Raises: 3x12\",\n    \"Russian Twists (plate): 3x20\",\n    \"Barbell Rollouts: 3x10\"\n  ];\n  const cardio = [\n    \"Jump Rope: 3x1min\",\n    \"Burpees: 3x10\",\n    \"Mountain Climbers: 3x30s\",\n    \"Jump Squats: 3x12\",\n    \"Farmer's Carry (Dumbbells): 3x40ft\"\n  ];\n\n  const groups = [upper, lower, core, cardio];\n  const seed = (week * 3 + dayIdx) % groups.length;\n  const accessories = [];\n\n  for (let i = 0; i < 2; i++) {\n    const group = groups[(seed + i) % groups.length];\n    const exercise = group[(week + dayIdx + i * 3) % group.length];\n    accessories.push(exercise);\n  }\n\n  return accessories;\n};\n\nexport default function StrengthApp() {\n  const [rms, setRms] = useState({ squat: 315, bench: 225, deadlift: 365, clean: 185, snatch: 135 });\n  const [log, setLog] = useState({});\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [weekIdx, setWeekIdx] = useState(0);\n  const [dayIdx, setDayIdx] = useState(0);\n  const [completedDays, setCompletedDays] = useState([]);\n\n  const updateRM = (lift, val) => setRms({ ...rms, [lift]: parseFloat(val || 0) });\n  const formatWeight = (percent, rm) => Math.round(percent * rm);\n\n  const runAssistant = async () => {\n    setLoading(true);\n    const body = {\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        { role: \"system\", content: \"You are a strength coach.\" },\n        { role: \"user\", content: prompt }\n      ],\n      temperature: 0.7\n    };\n\n    const res = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer YOUR_OPENAI_API_KEY`\n      },\n      body: JSON.stringify(body)\n    });\n\n    const data = await res.json();\n    setResponse(data.choices?.[0]?.message?.content || \"No response.\");\n    setLoading(false);\n  };\n\n  const weeks = Array.from({ length: 8 }, (_, i) => i + 1);\n  const days = [\"Day 1\", \"Day 2\", \"Day 3\"];\n  const currentWeek = weeks[weekIdx];\n  const currentDay = days[dayIdx];\n  const liftOrder = [\"squat\", \"bench\", \"deadlift\"];\n  const mainLift = liftOrder[(currentWeek + dayIdx) % 3];\n  const mainRM = rms[mainLift];\n  const olympicLift = dayIdx === 0 ? \"clean\" : dayIdx === 1 ? \"snatch\" : null;\n  const olympicRM = olympicLift ? rms[olympicLift] : 0;\n  const accessories = getAccessoryWork(currentWeek, dayIdx);\n\n  const handleCalendarClick = (w, d) => {\n    setWeekIdx(w - 1);\n    setDayIdx(d);\n  };\n\n  const nextDay = () => {\n    const key = `${currentWeek}-${currentDay}`;\n    setCompletedDays([...completedDays, key]);\n    if (dayIdx < 2) {\n      setDayIdx(dayIdx + 1);\n    } else if (weekIdx < 7) {\n      setWeekIdx(weekIdx + 1);\n      setDayIdx(0);\n    }\n  };\n\n  const getPhaseColor = (week) => {\n    if (week < 3) return 'bg-blue-200';\n    if (week < 5) return 'bg-yellow-200';\n    if (week === 5) return 'bg-orange-200';\n    if (week < 8) return 'bg-red-200';\n    return 'bg-green-200';\n  };\n\n  return (\n    <div className=\"p-4 max-w-3xl mx-auto space-y-6\">\n      <Card>\n        <CardHeader className=\"text-xl font-bold\">Progress Calendar</CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-3 gap-2\">\n            {weeks.map(w => (\n              <div key={w} className=\"border rounded p-2\">\n                <div className=\"font-semibold mb-1\">Week {w}</div>\n                <div className=\"flex flex-col gap-1\">\n                  {days.map((d, i) => {\n                    const key = `${w}-${d}`;\n                    const complete = completedDays.includes(key);\n                    return (\n                      <button\n                        key={key}\n                        className={`text-sm p-1 rounded ${getPhaseColor(w)} ${complete ? 'border border-green-600' : ''}`}\n                        onClick={() => handleCalendarClick(w, i)}\n                      >\n                        {d}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"text-xl font-semibold\">Enter Your 1RMs</CardHeader>\n        <CardContent className=\"grid gap-3\">\n          {LIFT_INPUTS.map(({ key, label }) => (\n            <div key={key} className=\"grid gap-1\">\n              <label className=\"text-sm font-medium\">{label}</label>\n              <Input\n                type=\"number\"\n                value={rms[key] || ''}\n                onChange={e => updateRM(key, e.target.value)}\n              />\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"text-xl font-semibold flex items-center gap-2\">\n          <Dumbbell className=\"w-5 h-5\" /> Week {currentWeek} – {currentDay}\n        </CardHeader>\n        <CardContent className=\"space-y-2\">\n          <p><strong>Main Lift:</strong> {mainLift.toUpperCase()}</p>\n          {currentWeek === WAVE_SET_WEEK ? (\n            <p><strong>Wave Set Weights:</strong> {\n              WAVE_SETS.map(p => `${p}%: ${formatWeight(p / 100, mainRM)} lbs`).join(\" | \")\n            }</p>\n          ) : (\n            <>\n              <p><strong>Top Set:</strong> {formatWeight(0.75 + currentWeek * 0.015, mainRM)} lbs</p>\n              <p><strong>Backoff Set:</strong> {formatWeight(0.7 + currentWeek * 0.01, mainRM)} lbs</p>\n            </>\n          )}\n          {olympicLift && (\n            <p><strong>{olympicLift.toUpperCase()}:</strong> {formatWeight(OLY_PERCENTAGES[currentWeek - 1], olympicRM)} lbs</p>\n          )}\n          <div>\n            <p className=\"font-semibold mt-4\">Accessory Work</p>\n            <ul className=\"list-disc list-inside text-sm\">\n              {accessories.map((work, i) => <li key={i}>{work}</li>)}\n            </ul>\n          </div>\n          <Textarea\n            placeholder=\"Notes / RPE / Reps Completed\"\n            value={log[`${currentWeek}-${currentDay}`] || ''}\n            onChange={e => setLog({ ...log, [`${currentWeek}-${currentDay}`]: e.target.value })}\n          />\n          <Button onClick={nextDay} className=\"mt-2 w-full\">\n            <BadgeCheck className=\"mr-2 h-4 w-4\" /> Mark Day as Completed\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader className=\"text-xl font-semibold\">AI Assistant</CardHeader>\n        <CardContent className=\"space-y-2\">\n          <Textarea\n            placeholder=\"Ask to generate a plan or modify a week...\"\n            value={prompt}\n            onChange={e => setPrompt(e.target.value)}\n          />\n          <Button onClick={runAssistant} disabled={loading}>\n            {loading ? \"Thinking...\" : \"Generate Plan or Advice\"}\n          </Button>\n          {response && (\n            <pre className=\"bg-muted p-3 rounded text-sm whitespace-pre-wrap\">{response}</pre>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}