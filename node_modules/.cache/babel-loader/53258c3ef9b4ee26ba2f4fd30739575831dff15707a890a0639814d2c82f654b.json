{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mike\\\\OneDrive - Shadowscape\\\\documents\\\\strength_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Strength Program App (Restored UI + Calendar + Dark Theme)\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardContent } from \"./components/ui/card.tsx\";\nimport { Button } from \"./components/ui/button.tsx\";\nimport { Textarea } from \"./components/ui/textarea.tsx\";\nimport { Input } from \"./components/ui/input.tsx\";\nimport { BadgeCheck, Dumbbell, ArrowBigRight, Brain, Flame, Hand } from 'lucide-react';\nimport './index.css';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst weeks = Array.from({\n  length: 8\n}, (_, i) => i + 1);\nconst days = [\"Day 1\", \"Day 2\", \"Day 3\"];\nconst LIFT_INPUTS = [{\n  key: 'squat',\n  label: 'Back Squat 1RM'\n}, {\n  key: 'bench',\n  label: 'Paused Bench Press 1RM'\n}, {\n  key: 'deadlift',\n  label: 'Deadlift 1RM'\n}, {\n  key: 'clean',\n  label: 'Power Clean 1RM'\n}, {\n  key: 'snatch',\n  label: 'Power Snatch 1RM'\n}, {\n  key: 'overhead',\n  label: 'Overhead Press 1RM'\n}];\nconst WAVE_SET_WEEK = 5;\nconst WAVE_SETS = [75, 77, 84, 87, 80, 75];\nconst OLY_PERCENTAGES = [0.7, 0.72, 0.74, 0.76, 0.78, 0.8, 0.82, 0.85];\nconst getAccessoryWork = (week, dayIdx) => {\n  const upper = [\"Push-ups: 3x20\", \"Chin-ups: 3xMax\", \"Dumbbell Bench Press: 3x12\", \"Arnold Press: 3x10\", \"Bent-over Rows (Barbell): 3x10\"];\n  const lower = [\"Goblet Squats: 3x15\", \"Walking Lunges: 3x12 each leg\", \"Bulgarian Split Squat: 3x8\", \"Dumbbell Step-ups: 3x10 each leg\", \"Barbell Hip Thrusts: 3x12\"];\n  const core = [\"Plank: 3x30s\", \"V-ups: 3x15\", \"Hanging Knee Raises: 3x12\", \"Russian Twists (plate): 3x20\", \"Barbell Rollouts: 3x10\"];\n  const cardio = [\"Jump Rope: 3x1min\", \"Burpees: 3x10\", \"Mountain Climbers: 3x30s\", \"Jump Squats: 3x12\", \"Farmer's Carry (Dumbbells): 3x40ft\"];\n  const overhead = [\"Overhead Press (Barbell): 3x8\", \"Z Press: 3x8\", \"Push Press: 3x10\", \"Plate Raise: 3x12\", \"Handstand Hold: 3x30s\"];\n  const groups = [upper, lower, core, cardio, overhead];\n  const icons = [/*#__PURE__*/_jsxDEV(Dumbbell, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 18\n  }, this), /*#__PURE__*/_jsxDEV(ArrowBigRight, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 32\n  }, this), /*#__PURE__*/_jsxDEV(Brain, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 51\n  }, this), /*#__PURE__*/_jsxDEV(Flame, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 62\n  }, this), /*#__PURE__*/_jsxDEV(Hand, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 73\n  }, this)];\n  const seed = Date.now() + week * 3 + dayIdx;\n  const rng = seed % 100;\n  const accessories = [];\n  for (let i = 0; i < 2; i++) {\n    const index = (rng + i) % groups.length;\n    const group = groups[index];\n    const exercise = group[(rng + week + i * 2) % group.length];\n    accessories.push({\n      text: exercise,\n      icon: icons[index]\n    });\n  }\n  return accessories;\n};\nexport default function StrengthApp() {\n  _s();\n  const [rms, setRms] = useState({\n    squat: 315,\n    bench: 225,\n    deadlift: 365,\n    clean: 185,\n    snatch: 135,\n    overhead: 135\n  });\n  const [log, setLog] = useState({});\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [weekIdx, setWeekIdx] = useState(0);\n  const [dayIdx, setDayIdx] = useState(0);\n  const [completedDays, setCompletedDays] = useState([]);\n  const [accessories, setAccessories] = useState([]);\n  const currentWeek = weeks[weekIdx];\n  const currentDay = days[dayIdx];\n  const liftOrder = [\"squat\", \"bench\", \"deadlift\", \"overhead\"];\n  const mainLift = liftOrder[(currentWeek + dayIdx) % liftOrder.length];\n  const mainRM = rms[mainLift];\n  const olympicLift = dayIdx === 0 ? \"clean\" : dayIdx === 1 ? \"snatch\" : null;\n  const olympicRM = olympicLift ? rms[olympicLift] : 0;\n  useEffect(() => {\n    setAccessories(getAccessoryWork(currentWeek, dayIdx));\n  }, [weekIdx, dayIdx]);\n  const updateRM = (lift, val) => setRms({\n    ...rms,\n    [lift]: parseFloat(val || 0)\n  });\n  const formatWeight = (percent, rm) => Math.round(percent * rm);\n  const nextDay = () => {\n    const key = `${currentWeek}-${currentDay}`;\n    setCompletedDays([...completedDays, key]);\n    if (dayIdx < 2) {\n      setDayIdx(dayIdx + 1);\n    } else if (weekIdx < 7) {\n      setWeekIdx(weekIdx + 1);\n      setDayIdx(0);\n    }\n  };\n  const getPhaseColor = week => {\n    if (week < 3) return 'bg-blue-900';\n    if (week < 5) return 'bg-yellow-700';\n    if (week === 5) return 'bg-orange-700';\n    if (week < 8) return 'bg-red-700';\n    return 'bg-green-700';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto space-y-6 bg-black text-white min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-2\",\n      children: weeks.map(w => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold mb-1\",\n          children: [\"Week \", w]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-1\",\n          children: days.map((d, i) => {\n            const key = `${w}-${d}`;\n            const complete = completedDays.includes(key);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `text-sm p-1 rounded ${getPhaseColor(w)} ${complete ? 'border border-green-500' : ''}`,\n              onClick: () => {\n                setWeekIdx(w - 1);\n                setDayIdx(i);\n              },\n              children: d\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, w, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"text-xl font-semibold\",\n        children: [\"Week \", currentWeek, \" \\u2013 \", currentDay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Main Lift:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 14\n          }, this), \" \", mainLift.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), currentWeek === WAVE_SET_WEEK ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Wave Set Weights:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 16\n          }, this), \" \", WAVE_SETS.map(p => `${p}%: ${formatWeight(p / 100, mainRM)} lbs`).join(\" | \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Top Set:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 18\n            }, this), \" \", formatWeight(0.75 + currentWeek * 0.015, mainRM), \" lbs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Backoff Set:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 18\n            }, this), \" \", formatWeight(0.7 + currentWeek * 0.01, mainRM), \" lbs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), olympicLift && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [olympicLift.toUpperCase(), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 16\n          }, this), \" \", formatWeight(OLY_PERCENTAGES[currentWeek - 1], olympicRM), \" lbs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold mt-4\",\n          children: \"Accessory Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside text-sm\",\n          children: accessories.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-center gap-2\",\n            children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 74\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          placeholder: \"Notes / RPE / Reps Completed\",\n          value: log[`${currentWeek}-${currentDay}`] || '',\n          onChange: e => setLog({\n            ...log,\n            [`${currentWeek}-${currentDay}`]: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: nextDay,\n          className: \"mt-2 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(BadgeCheck, {\n            className: \"mr-2 h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), \" Mark Day as Completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(StrengthApp, \"Sb6HlTArMobGBHQJ08ouyUrvMrs=\");\n_c = StrengthApp;\nvar _c;\n$RefreshReg$(_c, \"StrengthApp\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardContent","Button","Textarea","Input","BadgeCheck","Dumbbell","ArrowBigRight","Brain","Flame","Hand","motion","AnimatePresence","jsxDEV","_jsxDEV","Fragment","_Fragment","weeks","Array","from","length","_","i","days","LIFT_INPUTS","key","label","WAVE_SET_WEEK","WAVE_SETS","OLY_PERCENTAGES","getAccessoryWork","week","dayIdx","upper","lower","core","cardio","overhead","groups","icons","fileName","_jsxFileName","lineNumber","columnNumber","seed","Date","now","rng","accessories","index","group","exercise","push","text","icon","StrengthApp","_s","rms","setRms","squat","bench","deadlift","clean","snatch","log","setLog","prompt","setPrompt","response","setResponse","loading","setLoading","weekIdx","setWeekIdx","setDayIdx","completedDays","setCompletedDays","setAccessories","currentWeek","currentDay","liftOrder","mainLift","mainRM","olympicLift","olympicRM","updateRM","lift","val","parseFloat","formatWeight","percent","rm","Math","round","nextDay","getPhaseColor","className","children","map","w","d","complete","includes","onClick","toUpperCase","p","join","item","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/mike/OneDrive - Shadowscape/documents/strength_app/src/App.js"],"sourcesContent":["// Strength Program App (Restored UI + Calendar + Dark Theme)\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardContent } from \"./components/ui/card.tsx\";\nimport { Button } from \"./components/ui/button.tsx\";\nimport { Textarea } from \"./components/ui/textarea.tsx\";\nimport { Input } from \"./components/ui/input.tsx\";\nimport { BadgeCheck, Dumbbell, ArrowBigRight, Brain, Flame, Hand } from 'lucide-react';\nimport './index.css';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst weeks = Array.from({ length: 8 }, (_, i) => i + 1);\nconst days = [\"Day 1\", \"Day 2\", \"Day 3\"];\n\nconst LIFT_INPUTS = [\n  { key: 'squat', label: 'Back Squat 1RM' },\n  { key: 'bench', label: 'Paused Bench Press 1RM' },\n  { key: 'deadlift', label: 'Deadlift 1RM' },\n  { key: 'clean', label: 'Power Clean 1RM' },\n  { key: 'snatch', label: 'Power Snatch 1RM' },\n  { key: 'overhead', label: 'Overhead Press 1RM' }\n];\n\nconst WAVE_SET_WEEK = 5;\nconst WAVE_SETS = [75, 77, 84, 87, 80, 75];\nconst OLY_PERCENTAGES = [0.7, 0.72, 0.74, 0.76, 0.78, 0.8, 0.82, 0.85];\n\nconst getAccessoryWork = (week, dayIdx) => {\n  const upper = [\"Push-ups: 3x20\", \"Chin-ups: 3xMax\", \"Dumbbell Bench Press: 3x12\", \"Arnold Press: 3x10\", \"Bent-over Rows (Barbell): 3x10\"];\n  const lower = [\"Goblet Squats: 3x15\", \"Walking Lunges: 3x12 each leg\", \"Bulgarian Split Squat: 3x8\", \"Dumbbell Step-ups: 3x10 each leg\", \"Barbell Hip Thrusts: 3x12\"];\n  const core = [\"Plank: 3x30s\", \"V-ups: 3x15\", \"Hanging Knee Raises: 3x12\", \"Russian Twists (plate): 3x20\", \"Barbell Rollouts: 3x10\"];\n  const cardio = [\"Jump Rope: 3x1min\", \"Burpees: 3x10\", \"Mountain Climbers: 3x30s\", \"Jump Squats: 3x12\", \"Farmer's Carry (Dumbbells): 3x40ft\"];\n  const overhead = [\"Overhead Press (Barbell): 3x8\", \"Z Press: 3x8\", \"Push Press: 3x10\", \"Plate Raise: 3x12\", \"Handstand Hold: 3x30s\"];\n\n  const groups = [upper, lower, core, cardio, overhead];\n  const icons = [<Dumbbell />, <ArrowBigRight />, <Brain />, <Flame />, <Hand />];\n  const seed = Date.now() + week * 3 + dayIdx;\n  const rng = seed % 100;\n  const accessories = [];\n\n  for (let i = 0; i < 2; i++) {\n    const index = (rng + i) % groups.length;\n    const group = groups[index];\n    const exercise = group[(rng + week + i * 2) % group.length];\n    accessories.push({ text: exercise, icon: icons[index] });\n  }\n  return accessories;\n};\n\nexport default function StrengthApp() {\n  const [rms, setRms] = useState({ squat: 315, bench: 225, deadlift: 365, clean: 185, snatch: 135, overhead: 135 });\n  const [log, setLog] = useState({});\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [weekIdx, setWeekIdx] = useState(0);\n  const [dayIdx, setDayIdx] = useState(0);\n  const [completedDays, setCompletedDays] = useState([]);\n  const [accessories, setAccessories] = useState([]);\n\n  const currentWeek = weeks[weekIdx];\n  const currentDay = days[dayIdx];\n  const liftOrder = [\"squat\", \"bench\", \"deadlift\", \"overhead\"];\n  const mainLift = liftOrder[(currentWeek + dayIdx) % liftOrder.length];\n  const mainRM = rms[mainLift];\n  const olympicLift = dayIdx === 0 ? \"clean\" : dayIdx === 1 ? \"snatch\" : null;\n  const olympicRM = olympicLift ? rms[olympicLift] : 0;\n\n  useEffect(() => {\n    setAccessories(getAccessoryWork(currentWeek, dayIdx));\n  }, [weekIdx, dayIdx]);\n\n  const updateRM = (lift, val) => setRms({ ...rms, [lift]: parseFloat(val || 0) });\n  const formatWeight = (percent, rm) => Math.round(percent * rm);\n\n  const nextDay = () => {\n    const key = `${currentWeek}-${currentDay}`;\n    setCompletedDays([...completedDays, key]);\n    if (dayIdx < 2) {\n      setDayIdx(dayIdx + 1);\n    } else if (weekIdx < 7) {\n      setWeekIdx(weekIdx + 1);\n      setDayIdx(0);\n    }\n  };\n\n  const getPhaseColor = (week) => {\n    if (week < 3) return 'bg-blue-900';\n    if (week < 5) return 'bg-yellow-700';\n    if (week === 5) return 'bg-orange-700';\n    if (week < 8) return 'bg-red-700';\n    return 'bg-green-700';\n  };\n\n  return (\n    <div className=\"p-4 max-w-3xl mx-auto space-y-6 bg-black text-white min-h-screen\">\n      <div className=\"grid grid-cols-3 gap-2\">\n        {weeks.map(w => (\n          <div key={w} className=\"border rounded p-2\">\n            <div className=\"font-semibold mb-1\">Week {w}</div>\n            <div className=\"flex flex-col gap-1\">\n              {days.map((d, i) => {\n                const key = `${w}-${d}`;\n                const complete = completedDays.includes(key);\n                return (\n                  <button\n                    key={key}\n                    className={`text-sm p-1 rounded ${getPhaseColor(w)} ${complete ? 'border border-green-500' : ''}`}\n                    onClick={() => {\n                      setWeekIdx(w - 1);\n                      setDayIdx(i);\n                    }}\n                  >{d}</button>\n                );\n              })}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <Card>\n        <CardHeader className=\"text-xl font-semibold\">Week {currentWeek} – {currentDay}</CardHeader>\n        <CardContent className=\"space-y-2\">\n          <p><strong>Main Lift:</strong> {mainLift.toUpperCase()}</p>\n          {currentWeek === WAVE_SET_WEEK ? (\n            <p><strong>Wave Set Weights:</strong> {\n              WAVE_SETS.map(p => `${p}%: ${formatWeight(p / 100, mainRM)} lbs`).join(\" | \")\n            }</p>\n          ) : (\n            <>\n              <p><strong>Top Set:</strong> {formatWeight(0.75 + currentWeek * 0.015, mainRM)} lbs</p>\n              <p><strong>Backoff Set:</strong> {formatWeight(0.7 + currentWeek * 0.01, mainRM)} lbs</p>\n            </>\n          )}\n          {olympicLift && (\n            <p><strong>{olympicLift.toUpperCase()}:</strong> {formatWeight(OLY_PERCENTAGES[currentWeek - 1], olympicRM)} lbs</p>\n          )}\n\n          <p className=\"font-semibold mt-4\">Accessory Work</p>\n          <ul className=\"list-disc list-inside text-sm\">\n            {accessories.map((item, i) => (\n              <li key={i} className=\"flex items-center gap-2\">{item.icon}<span>{item.text}</span></li>\n            ))}\n          </ul>\n\n          <Textarea\n            placeholder=\"Notes / RPE / Reps Completed\"\n            value={log[`${currentWeek}-${currentDay}`] || ''}\n            onChange={e => setLog({ ...log, [`${currentWeek}-${currentDay}`]: e.target.value })}\n          />\n\n          <Button onClick={nextDay} className=\"mt-2 w-full\">\n            <BadgeCheck className=\"mr-2 h-4 w-4\" /> Mark Day as Completed\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}