{"ast":null,"code":"import { resolveElements, getValueTransition, NativeAnimation } from 'motion-dom';\nimport { invariant, secondsToMilliseconds } from 'motion-utils';\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n  const elements = resolveElements(elementOrSelector, scope);\n  const numElements = elements.length;\n  invariant(Boolean(numElements), \"No valid element provided.\");\n  const animations = [];\n  for (let i = 0; i < numElements; i++) {\n    const element = elements[i];\n    const elementTransition = {\n      ...options\n    };\n    /**\n     * Resolve stagger function if provided.\n     */\n    if (typeof elementTransition.delay === \"function\") {\n      elementTransition.delay = elementTransition.delay(i, numElements);\n    }\n    for (const valueName in keyframes) {\n      const valueKeyframes = keyframes[valueName];\n      const valueOptions = {\n        ...getValueTransition(elementTransition, valueName)\n      };\n      valueOptions.duration && (valueOptions.duration = secondsToMilliseconds(valueOptions.duration));\n      valueOptions.delay && (valueOptions.delay = secondsToMilliseconds(valueOptions.delay));\n      animations.push(new NativeAnimation({\n        element,\n        name: valueName,\n        keyframes: valueKeyframes,\n        transition: valueOptions,\n        allowFlatten: !elementTransition.type && !elementTransition.ease\n      }));\n    }\n  }\n  return animations;\n}\nexport { animateElements };","map":null,"metadata":{},"sourceType":"module"}