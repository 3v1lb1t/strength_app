{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mike\\\\OneDrive - Shadowscape\\\\documents\\\\strength_app\\\\src\\\\App.js\";\n// Strength Program App (Restored UI + Calendar + Dark Theme)\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardContent } from \"./components/ui/card.tsx\";\nimport { Button } from \"./components/ui/button.tsx\";\nimport { Textarea } from \"./components/ui/textarea.tsx\";\nimport { Input } from \"./components/ui/input.tsx\";\nimport { BadgeCheck, Dumbbell, ArrowBigRight, Brain, Flame, Hand } from 'lucide-react';\nimport './index.css';\nimport { motion } from 'framer-motion';\nconst weeks = Array.from({\n  length: 8\n}, (_, i) => i + 1);\nconst days = [\"Day 1\", \"Day 2\", \"Day 3\"];\nconst LIFT_INPUTS = [{\n  key: 'squat',\n  label: 'Back Squat 1RM'\n}, {\n  key: 'bench',\n  label: 'Paused Bench Press 1RM'\n}, {\n  key: 'deadlift',\n  label: 'Deadlift 1RM'\n}, {\n  key: 'clean',\n  label: 'Power Clean 1RM'\n}, {\n  key: 'snatch',\n  label: 'Power Snatch 1RM'\n}, {\n  key: 'overhead',\n  label: 'Overhead Press 1RM'\n}];\nconst WAVE_SET_WEEK = 5;\nconst WAVE_SETS = [75, 77, 84, 87, 80, 75];\nconst OLY_PERCENTAGES = [0.7, 0.72, 0.74, 0.76, 0.78, 0.8, 0.82, 0.85];\nconst getAccessoryWork = (week, dayIdx) => {\n  const upper = [\"Push-ups: 3x20\", \"Chin-ups: 3xMax\", \"Dumbbell Bench Press: 3x12\", \"Arnold Press: 3x10\", \"Bent-over Rows (Barbell): 3x10\"];\n  const lower = [\"Goblet Squats: 3x15\", \"Walking Lunges: 3x12 each leg\", \"Bulgarian Split Squat: 3x8\", \"Dumbbell Step-ups: 3x10 each leg\", \"Barbell Hip Thrusts: 3x12\"];\n  const core = [\"Plank: 3x30s\", \"V-ups: 3x15\", \"Hanging Knee Raises: 3x12\", \"Russian Twists (plate): 3x20\", \"Barbell Rollouts: 3x10\"];\n  const cardio = [\"Jump Rope: 3x1min\", \"Burpees: 3x10\", \"Mountain Climbers: 3x30s\", \"Jump Squats: 3x12\", \"Farmer's Carry (Dumbbells): 3x40ft\"];\n  const overhead = [\"Overhead Press (Barbell): 3x8\", \"Z Press: 3x8\", \"Push Press: 3x10\", \"Plate Raise: 3x12\", \"Handstand Hold: 3x30s\"];\n  const groups = [upper, lower, core, cardio, overhead];\n  const icons = [/*#__PURE__*/React.createElement(Dumbbell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(ArrowBigRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Brain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 51\n    }\n  }), /*#__PURE__*/React.createElement(Flame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 62\n    }\n  }), /*#__PURE__*/React.createElement(Hand, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 73\n    }\n  })];\n  const seed = Date.now() + week * 3 + dayIdx;\n  const rng = seed % 100;\n  const accessories = [];\n  for (let i = 0; i < 2; i++) {\n    const index = (rng + i) % groups.length;\n    const group = groups[index];\n    const exercise = group[(rng + week + i * 2) % group.length];\n    accessories.push({\n      text: exercise,\n      icon: icons[index]\n    });\n  }\n  return accessories;\n};\nexport default function StrengthApp() {\n  const [rms, setRms] = useState({\n    squat: 315,\n    bench: 225,\n    deadlift: 365,\n    clean: 185,\n    snatch: 135,\n    overhead: 135\n  });\n  const [log, setLog] = useState({});\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [weekIdx, setWeekIdx] = useState(0);\n  const [dayIdx, setDayIdx] = useState(0);\n  const [completedDays, setCompletedDays] = useState([]);\n  const [accessories, setAccessories] = useState([]);\n  const currentWeek = weeks[weekIdx];\n  const currentDay = days[dayIdx];\n  const liftOrder = [\"squat\", \"bench\", \"deadlift\", \"overhead\"];\n  const mainLift = liftOrder[(currentWeek + dayIdx) % liftOrder.length];\n  const mainRM = rms[mainLift];\n  const olympicLift = dayIdx === 0 ? \"clean\" : dayIdx === 1 ? \"snatch\" : null;\n  const olympicRM = olympicLift ? rms[olympicLift] : 0;\n  useEffect(() => {\n    setAccessories(getAccessoryWork(currentWeek, dayIdx));\n  }, [weekIdx, dayIdx]);\n  const updateRM = (lift, val) => setRms({\n    ...rms,\n    [lift]: parseFloat(val || 0)\n  });\n  const formatWeight = (percent, rm) => Math.round(percent * rm);\n  const nextDay = () => {\n    const key = `${currentWeek}-${currentDay}`;\n    setCompletedDays([...completedDays, key]);\n    if (dayIdx < 2) {\n      setDayIdx(dayIdx + 1);\n    } else if (weekIdx < 7) {\n      setWeekIdx(weekIdx + 1);\n      setDayIdx(0);\n    }\n  };\n  const getPhaseColor = week => {\n    if (week < 3) return 'bg-blue-900';\n    if (week < 5) return 'bg-yellow-700';\n    if (week === 5) return 'bg-orange-700';\n    if (week < 8) return 'bg-red-700';\n    return 'bg-green-700';\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto space-y-6 bg-black text-white min-h-screen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"text-xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Enter Your 1RMs\"), /*#__PURE__*/React.createElement(CardContent, {\n    className: \"grid gap-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, LIFT_INPUTS.map(({\n    key,\n    label\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    className: \"grid gap-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-sm font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, label), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    value: rms[key] || '',\n    onChange: e => updateRM(key, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-3 gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, weeks.map(w => /*#__PURE__*/React.createElement(\"div\", {\n    key: w,\n    className: \"border rounded p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-semibold mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Week \", w), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col gap-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, days.map((d, i) => {\n    const key = `${w}-${d}`;\n    const complete = completedDays.includes(key);\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: key,\n      className: `text-sm p-1 rounded ${getPhaseColor(w)} ${complete ? 'border border-green-500' : ''}`,\n      onClick: () => {\n        setWeekIdx(w - 1);\n        setDayIdx(i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, d);\n  }))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"text-xl font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Week \", currentWeek, \" \\u2013 \", currentDay), /*#__PURE__*/React.createElement(CardContent, {\n    className: \"space-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 14\n    }\n  }, \"Main Lift:\"), \" \", mainLift.toUpperCase()), currentWeek === WAVE_SET_WEEK ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }\n  }, \"Wave Set Weights:\"), \" \", WAVE_SETS.map(p => `${p}%: ${formatWeight(p / 100, mainRM)} lbs`).join(\" | \")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 18\n    }\n  }, \"Top Set:\"), \" \", formatWeight(0.75 + currentWeek * 0.015, mainRM), \" lbs\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 18\n    }\n  }, \"Backoff Set:\"), \" \", formatWeight(0.7 + currentWeek * 0.01, mainRM), \" lbs\")), olympicLift && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 16\n    }\n  }, olympicLift.toUpperCase(), \":\"), \" \", formatWeight(OLY_PERCENTAGES[currentWeek - 1], olympicRM), \" lbs\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-semibold mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Accessory Work\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-disc list-inside text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, accessories.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    className: \"flex items-center gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, item.icon, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 74\n    }\n  }, item.text)))), /*#__PURE__*/React.createElement(Textarea, {\n    placeholder: \"Notes / RPE / Reps Completed\",\n    value: log[`${currentWeek}-${currentDay}`] || '',\n    onChange: e => setLog({\n      ...log,\n      [`${currentWeek}-${currentDay}`]: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: nextDay,\n    className: \"mt-2 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BadgeCheck, {\n    className: \"mr-2 h-4 w-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), \" Mark Day as Completed\"))));\n}","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardContent","Button","Textarea","Input","BadgeCheck","Dumbbell","ArrowBigRight","Brain","Flame","Hand","motion","weeks","Array","from","length","_","i","days","LIFT_INPUTS","key","label","WAVE_SET_WEEK","WAVE_SETS","OLY_PERCENTAGES","getAccessoryWork","week","dayIdx","upper","lower","core","cardio","overhead","groups","icons","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","seed","Date","now","rng","accessories","index","group","exercise","push","text","icon","StrengthApp","rms","setRms","squat","bench","deadlift","clean","snatch","log","setLog","prompt","setPrompt","response","setResponse","loading","setLoading","weekIdx","setWeekIdx","setDayIdx","completedDays","setCompletedDays","setAccessories","currentWeek","currentDay","liftOrder","mainLift","mainRM","olympicLift","olympicRM","updateRM","lift","val","parseFloat","formatWeight","percent","rm","Math","round","nextDay","getPhaseColor","className","map","type","value","onChange","e","target","w","d","complete","includes","onClick","toUpperCase","p","join","Fragment","item","placeholder"],"sources":["C:/Users/mike/OneDrive - Shadowscape/documents/strength_app/src/App.js"],"sourcesContent":["// Strength Program App (Restored UI + Calendar + Dark Theme)\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardContent } from \"./components/ui/card.tsx\";\nimport { Button } from \"./components/ui/button.tsx\";\nimport { Textarea } from \"./components/ui/textarea.tsx\";\nimport { Input } from \"./components/ui/input.tsx\";\nimport { BadgeCheck, Dumbbell, ArrowBigRight, Brain, Flame, Hand } from 'lucide-react';\nimport './index.css';\nimport { motion } from 'framer-motion';\n\nconst weeks = Array.from({ length: 8 }, (_, i) => i + 1);\nconst days = [\"Day 1\", \"Day 2\", \"Day 3\"];\n\nconst LIFT_INPUTS = [\n  { key: 'squat', label: 'Back Squat 1RM' },\n  { key: 'bench', label: 'Paused Bench Press 1RM' },\n  { key: 'deadlift', label: 'Deadlift 1RM' },\n  { key: 'clean', label: 'Power Clean 1RM' },\n  { key: 'snatch', label: 'Power Snatch 1RM' },\n  { key: 'overhead', label: 'Overhead Press 1RM' }\n];\n\nconst WAVE_SET_WEEK = 5;\nconst WAVE_SETS = [75, 77, 84, 87, 80, 75];\nconst OLY_PERCENTAGES = [0.7, 0.72, 0.74, 0.76, 0.78, 0.8, 0.82, 0.85];\n\nconst getAccessoryWork = (week, dayIdx) => {\n  const upper = [\"Push-ups: 3x20\", \"Chin-ups: 3xMax\", \"Dumbbell Bench Press: 3x12\", \"Arnold Press: 3x10\", \"Bent-over Rows (Barbell): 3x10\"];\n  const lower = [\"Goblet Squats: 3x15\", \"Walking Lunges: 3x12 each leg\", \"Bulgarian Split Squat: 3x8\", \"Dumbbell Step-ups: 3x10 each leg\", \"Barbell Hip Thrusts: 3x12\"];\n  const core = [\"Plank: 3x30s\", \"V-ups: 3x15\", \"Hanging Knee Raises: 3x12\", \"Russian Twists (plate): 3x20\", \"Barbell Rollouts: 3x10\"];\n  const cardio = [\"Jump Rope: 3x1min\", \"Burpees: 3x10\", \"Mountain Climbers: 3x30s\", \"Jump Squats: 3x12\", \"Farmer's Carry (Dumbbells): 3x40ft\"];\n  const overhead = [\"Overhead Press (Barbell): 3x8\", \"Z Press: 3x8\", \"Push Press: 3x10\", \"Plate Raise: 3x12\", \"Handstand Hold: 3x30s\"];\n\n  const groups = [upper, lower, core, cardio, overhead];\n  const icons = [<Dumbbell />, <ArrowBigRight />, <Brain />, <Flame />, <Hand />];\n  const seed = Date.now() + week * 3 + dayIdx;\n  const rng = seed % 100;\n  const accessories = [];\n\n  for (let i = 0; i < 2; i++) {\n    const index = (rng + i) % groups.length;\n    const group = groups[index];\n    const exercise = group[(rng + week + i * 2) % group.length];\n    accessories.push({ text: exercise, icon: icons[index] });\n  }\n  return accessories;\n};\n\nexport default function StrengthApp() {\n  const [rms, setRms] = useState({ squat: 315, bench: 225, deadlift: 365, clean: 185, snatch: 135, overhead: 135 });\n  const [log, setLog] = useState({});\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [weekIdx, setWeekIdx] = useState(0);\n  const [dayIdx, setDayIdx] = useState(0);\n  const [completedDays, setCompletedDays] = useState([]);\n  const [accessories, setAccessories] = useState([]);\n\n  const currentWeek = weeks[weekIdx];\n  const currentDay = days[dayIdx];\n  const liftOrder = [\"squat\", \"bench\", \"deadlift\", \"overhead\"];\n  const mainLift = liftOrder[(currentWeek + dayIdx) % liftOrder.length];\n  const mainRM = rms[mainLift];\n  const olympicLift = dayIdx === 0 ? \"clean\" : dayIdx === 1 ? \"snatch\" : null;\n  const olympicRM = olympicLift ? rms[olympicLift] : 0;\n\n  useEffect(() => {\n    setAccessories(getAccessoryWork(currentWeek, dayIdx));\n  }, [weekIdx, dayIdx]);\n\n  const updateRM = (lift, val) => setRms({ ...rms, [lift]: parseFloat(val || 0) });\n  const formatWeight = (percent, rm) => Math.round(percent * rm);\n\n  const nextDay = () => {\n    const key = `${currentWeek}-${currentDay}`;\n    setCompletedDays([...completedDays, key]);\n    if (dayIdx < 2) {\n      setDayIdx(dayIdx + 1);\n    } else if (weekIdx < 7) {\n      setWeekIdx(weekIdx + 1);\n      setDayIdx(0);\n    }\n  };\n\n  const getPhaseColor = (week) => {\n    if (week < 3) return 'bg-blue-900';\n    if (week < 5) return 'bg-yellow-700';\n    if (week === 5) return 'bg-orange-700';\n    if (week < 8) return 'bg-red-700';\n    return 'bg-green-700';\n  };\n\n  return (\n    <div className=\"p-4 max-w-3xl mx-auto space-y-6 bg-black text-white min-h-screen\">\n      <Card>\n        <CardHeader className=\"text-xl font-bold\">Enter Your 1RMs</CardHeader>\n        <CardContent className=\"grid gap-3\">\n          {LIFT_INPUTS.map(({ key, label }) => (\n            <div key={key} className=\"grid gap-1\">\n              <label className=\"text-sm font-medium\">{label}</label>\n              <Input\n                type=\"number\"\n                value={rms[key] || ''}\n                onChange={e => updateRM(key, e.target.value)}\n              />\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n\n      <div className=\"grid grid-cols-3 gap-2\">\n        {weeks.map(w => (\n          <div key={w} className=\"border rounded p-2\">\n            <div className=\"font-semibold mb-1\">Week {w}</div>\n            <div className=\"flex flex-col gap-1\">\n              {days.map((d, i) => {\n                const key = `${w}-${d}`;\n                const complete = completedDays.includes(key);\n                return (\n                  <button\n                    key={key}\n                    className={`text-sm p-1 rounded ${getPhaseColor(w)} ${complete ? 'border border-green-500' : ''}`}\n                    onClick={() => {\n                      setWeekIdx(w - 1);\n                      setDayIdx(i);\n                    }}\n                  >{d}</button>\n                );\n              })}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <Card>\n        <CardHeader className=\"text-xl font-semibold\">Week {currentWeek} – {currentDay}</CardHeader>\n        <CardContent className=\"space-y-2\">\n          <p><strong>Main Lift:</strong> {mainLift.toUpperCase()}</p>\n          {currentWeek === WAVE_SET_WEEK ? (\n            <p><strong>Wave Set Weights:</strong> {\n              WAVE_SETS.map(p => `${p}%: ${formatWeight(p / 100, mainRM)} lbs`).join(\" | \")\n            }</p>\n          ) : (\n            <>\n              <p><strong>Top Set:</strong> {formatWeight(0.75 + currentWeek * 0.015, mainRM)} lbs</p>\n              <p><strong>Backoff Set:</strong> {formatWeight(0.7 + currentWeek * 0.01, mainRM)} lbs</p>\n            </>\n          )}\n          {olympicLift && (\n            <p><strong>{olympicLift.toUpperCase()}:</strong> {formatWeight(OLY_PERCENTAGES[currentWeek - 1], olympicRM)} lbs</p>\n          )}\n\n          <p className=\"font-semibold mt-4\">Accessory Work</p>\n          <ul className=\"list-disc list-inside text-sm\">\n            {accessories.map((item, i) => (\n              <li key={i} className=\"flex items-center gap-2\">{item.icon}<span>{item.text}</span></li>\n            ))}\n          </ul>\n\n          <Textarea\n            placeholder=\"Notes / RPE / Reps Completed\"\n            value={log[`${currentWeek}-${currentDay}`] || ''}\n            onChange={e => setLog({ ...log, [`${currentWeek}-${currentDay}`]: e.target.value })}\n          />\n\n          <Button onClick={nextDay} className=\"mt-2 w-full\">\n            <BadgeCheck className=\"mr-2 h-4 w-4\" /> Mark Day as Completed\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}