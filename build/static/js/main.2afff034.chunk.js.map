{"version":3,"sources":["App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["getRandomItems","arr","count","sort","Math","random","slice","mainLifts","olympicLifts","weeks","generateWeeks","waveTemplate","percents","reps","hypertrophy","percent","strength","peaking","usedWaveLifts","Set","result","i","push","week","type","_result","size","length","availableWaveLifts","filter","l","has","assignedLift","wave","floor","add","AccessoryItem","_ref","accessory","showDetail","setShowDetail","useState","React","createElement","name","description","onClick","prev","style","marginLeft","marginTop","instructions","video","href","target","rel","App","useEffect","today","Date","lastReset","localStorage","getItem","currentWeek","getFullYear","String","getDate","getDay","padStart","removeItem","setItem","getNonRepeating","list","options","choice","mainList","olyList","accessoryPool","setAccessoryPool","prevNames","available","a","includes","selected","JSON","stringify","map","savedWeekIndex","mainFocus","setMainFocus","olympicFocus","setOlympicFocus","trainingWeek","setTrainingWeek","parseInt","completedDays","setCompletedDays","saved","parse","Array","fill","currentDay","setCurrentDay","savedDay","newMain","newOly","savedOneRepMax","oneRepMax","setOneRepMax","squat","bench","deadlift","press","clean","snatch","fetch","then","res","json","data","catch","err","console","error","deferredPrompt","setDeferredPrompt","showInstallButton","setShowInstallButton","showIOSTooltip","setShowIOSTooltip","showDisclaimerModal","setShowDisclaimerModal","selectedAccessories","setSelectedAccessories","currentAccessories","todayLabel","charAt","toUpperCase","calculateWeight","lift","round","renderLift","liftKey","className","placeholder","onChange","e","updated","[object Object]","value","waveWeek","p","key","basicWeek","backoff","split","Fragment","margin","fontSize","_","idx","date","setDate","dayLabel","toLocaleDateString","undefined","weekday","dateLabel","month","day","cleared","Object","keys","htmlFor","id","acc","next","newWeek","prevMain","prevOly","newMainOptions","newOlyOptions","toString","prompt","userChoice","position","bottom","right","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","_config$onUpdate","_config$onSuccess","state","controller","log","onUpdate","call","onSuccess","ReactDOM","createRoot","document","getElementById","render","StrictMode","addEventListener","origin","headers","Service-Worker","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2afff034.chunk.js","sourcesContent":["// App.tsx (Full Updated Script with fixed accessoryPool as React state)\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nconst getRandomItems = <T,>(arr: T[], count: number): T[] => {\r\n  const shuffled = [...arr].sort(() => 0.5 - Math.random());\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\nconst mainLifts = ['squat', 'bench', 'deadlift', 'press'];\r\nconst olympicLifts = ['clean', 'snatch'];\r\n\r\nconst generateWeeks = () => {\r\n  const waveTemplate = [\r\n    { percents: [0.77, 0.8, 0.86, 0.9, 0.82, 0.77], reps: ['1x6', '1x5', '1x3', '1x2', '1x4', '1x6'] },\r\n    { percents: [0.78, 0.81, 0.87, 0.91, 0.83, 0.78], reps: ['1x6', '1x5', '1x3', '1x2', '1x4', '1x6'] }\r\n  ];\r\n\r\n  const hypertrophy = [\r\n    { percent: 0.6, reps: '3x12' },\r\n    { percent: 0.65, reps: '4x10' },\r\n    { percent: 0.7, reps: '4x8' },\r\n    { percent: 0.72, reps: '4x8' }\r\n  ];\r\n\r\n  const strength = [\r\n    { percent: 0.75, reps: '4x6' },\r\n    { percent: 0.8, reps: '4x5' },\r\n    { percent: 0.82, reps: '3x4' },\r\n    { percent: 0.85, reps: '3x4' }\r\n  ];\r\n\r\n  const peaking = [\r\n    { percent: 0.88, reps: '3x3' },\r\n    { percent: 0.91, reps: '3x2' },\r\n    { percent: 0.94, reps: '2x2' },\r\n    { percent: 0.97, reps: '2x1' }\r\n  ];\r\n\r\n  const usedWaveLifts = new Set();\r\n  const result = [];\r\n\r\n  for (let i = 0; i < 12; i++) {\r\n    // hypertrophy phase: weeks 1-4\r\n    if (i < 4) {\r\n      result.push({ week: i + 1, type: 'hypertrophy', ...hypertrophy[i] });\r\n      continue;\r\n    }\r\n\r\n    // strength phase: weeks 5-8 (include 1 wave week per main lift only once)\r\n    if (i >= 4 && i < 8) {\r\n      const isWaveWeek = Math.random() < 0.4 && result[i - 1]?.type !== 'wave' && usedWaveLifts.size < mainLifts.length;\r\n      if (isWaveWeek) {\r\n        const availableWaveLifts = mainLifts.filter(l => !usedWaveLifts.has(l));\r\n        const assignedLift = getRandomItems(availableWaveLifts, 1)[0];\r\n        const wave = waveTemplate[Math.floor(Math.random() * waveTemplate.length)];\r\n        usedWaveLifts.add(assignedLift);\r\n        result.push({ week: i + 1, type: 'wave', assignedLift, ...wave });\r\n        continue;\r\n      }\r\n      result.push({ week: i + 1, type: 'strength', ...strength[i - 4] });\r\n      continue;\r\n    }\r\n\r\n    // peaking phase: weeks 9-12\r\n    if (i >= 8 && i < 12) {\r\n      result.push({ week: i + 1, type: 'peaking', ...peaking[i - 8] });\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst weeks = generateWeeks();\r\n\r\nconst App: React.FC = () => {\r\n  \r\n\r\n  // Pre-generate weekly main/oly focus on first load\r\n  useEffect(() => {\r\n    const today = new Date();\r\n    const lastReset = localStorage.getItem('lastResetDate');\r\n    const currentWeek = today.getFullYear() + '-W' + String(Math.floor((today.getDate() - today.getDay()) / 7 + 1)).padStart(2, '0');\r\n\r\n    if (lastReset !== currentWeek) {\r\n      for (let i = 0; i < 7; i++) {\r\n        localStorage.removeItem(`mainLift_${i}`);\r\n        localStorage.removeItem(`olyLift_${i}`);\r\n        localStorage.removeItem(`accessoryWork_${i}`);\r\n      }\r\n      localStorage.removeItem('weekLiftsGenerated');\r\n      localStorage.removeItem('weekAccessoriesGenerated');\r\n      localStorage.removeItem('weekFocusGenerated');\r\n      localStorage.setItem('lastResetDate', currentWeek);\r\n    }\r\n\r\n\r\n    const liftsGenerated = localStorage.getItem('weekLiftsGenerated');\r\n    if (!liftsGenerated) {\r\n      const getNonRepeating = (list: string[], count: number) => {\r\n        const result = [];\r\n        let prev = '';\r\n        for (let i = 0; i < count; i++) {\r\n          const options = list.filter(l => l !== prev);\r\n          const choice = getRandomItems(options, 1)[0];\r\n          result.push(choice);\r\n          prev = choice;\r\n        }\r\n        return result;\r\n      };\r\n\r\n      const mainList = getNonRepeating(mainLifts, 7);\r\n      const olyList = getNonRepeating(olympicLifts, 7);\r\n\r\n      for (let i = 0; i < 7; i++) {\r\n        localStorage.setItem(`mainLift_${i}`, mainList[i]);\r\n        localStorage.setItem(`olyLift_${i}`, olyList[i]);\r\n      }\r\n\r\n      localStorage.setItem('weekLiftsGenerated', 'true');\r\n    }\r\n  }, []);\r\n\r\n  const [accessoryPool, setAccessoryPool] = useState<{ name: string; description: string; instructions: string; video?: string }[]>([]);\r\n\r\n  // Fetch accessory pool data first\r\n  \r\n\r\n  // Pre-generate weekly accessory work on first load\r\n  useEffect(() => {\r\n    if (accessoryPool.length >= 21) {\r\n      const accessoriesGenerated = localStorage.getItem('weekAccessoriesGenerated');\r\n      if (!accessoriesGenerated) {\r\n        const result: Record<number, typeof accessoryPool> = {};\r\n        let prevNames: string[] = [];\r\n        for (let i = 0; i < 7; i++) {\r\n          const available = accessoryPool.filter(a => !prevNames.includes(a.name));\r\n          const selected = getRandomItems(available.length >= 3 ? available : accessoryPool, 3);\r\n          result[i] = selected;\r\n          localStorage.setItem(`accessoryWork_${i}`, JSON.stringify(selected));\r\n          prevNames = selected.map(a => a.name);\r\n        }\r\n        localStorage.setItem('weekAccessoriesGenerated', 'true');\r\n      }\r\n    }\r\n  }, [accessoryPool]);\r\n  \r\n  const savedMainFocus = localStorage.getItem('mainFocusWeek');\r\n  const savedOlyFocus = localStorage.getItem('olympicFocusWeek');\r\n  const savedWeekIndex = localStorage.getItem('trainingWeek');\r\n\r\n  const [mainFocus, setMainFocus] = useState<string>('');\r\n  const [olympicFocus, setOlympicFocus] = useState<string>('');\r\n  const [trainingWeek, setTrainingWeek] = useState<number>(() => savedWeekIndex ? parseInt(savedWeekIndex) : 0);\r\n  const [completedDays, setCompletedDays] = useState<boolean[]>(() => {\r\n    const saved = localStorage.getItem('completedDays');\r\n    return saved ? JSON.parse(saved) : Array(7).fill(false);\r\n  });\r\n\r\n  const [currentDay, setCurrentDay] = useState<number>(() => {\r\n    const savedDay = localStorage.getItem('currentDay');\r\n    return savedDay ? parseInt(savedDay) : 0;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newMain = localStorage.getItem(`mainLift_${currentDay}`) || mainLifts[0];\r\n    const newOly = localStorage.getItem(`olyLift_${currentDay}`) || olympicLifts[0];\r\n    setMainFocus(newMain);\r\n    setOlympicFocus(newOly);\r\n  }, [currentDay]);\r\n\r\n  const savedOneRepMax = localStorage.getItem('oneRepMax');\r\n  const [oneRepMax, setOneRepMax] = useState<Record<string, number>>(\r\n    savedOneRepMax ? JSON.parse(savedOneRepMax) : {\r\n      squat: 0, bench: 0, deadlift: 0, press: 0, clean: 0, snatch: 0,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch('./data/accessories.json')\r\n      .then(res => res.json())\r\n      .then(data => setAccessoryPool(data))\r\n      .catch(err => console.error('Failed to load accessory data:', err));\r\n  }, []);\r\n\r\n  \r\n  \r\n  const [deferredPrompt, setDeferredPrompt] = useState<Event | null>(null);\r\n  const [showInstallButton, setShowInstallButton] = useState(false);\r\n  const [showIOSTooltip, setShowIOSTooltip] = useState(false);\r\n  const [showDisclaimerModal, setShowDisclaimerModal] = useState(() => !localStorage.getItem('disclaimerAccepted'));\r\n\r\n  \r\n\r\n  const [selectedAccessories, setSelectedAccessories] = useState<typeof accessoryPool>([]);\r\n\r\n  useEffect(() => {\r\n    if (accessoryPool.length > 0) {\r\n      const currentAccessories = localStorage.getItem(`accessoryWork_${currentDay}`);\r\n      if (currentAccessories) {\r\n        setSelectedAccessories(JSON.parse(currentAccessories));\r\n      }\r\n    }\r\n  }, [accessoryPool, currentDay]);\r\n  \r\n\r\n  \r\n\r\n  \r\n  \r\n  const todayLabel = `${mainFocus.charAt(0).toUpperCase() + mainFocus.slice(1)} Focus`;\r\n  const week = weeks[trainingWeek % weeks.length];\r\n\r\n  const calculateWeight = (percent: number, lift: string): string => `${Math.round(oneRepMax[lift] * percent)} lbs @ ${Math.round(percent * 100)}%`;\r\n\r\n  const renderLift = (name: string, liftKey: string) => {\r\n    if (week.type === 'test') {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{name} – Test 1RM</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter your tested 1RM\"\r\n            onChange={(e) => {\r\n              const updated = { ...oneRepMax, [liftKey]: parseInt(e.target.value) || 0 };\r\n              setOneRepMax(updated);\r\n              localStorage.setItem('oneRepMax', JSON.stringify(updated));\r\n            }}\r\n            value={oneRepMax[liftKey] || ''}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (week.type === 'wave') {\r\n      const waveWeek = week as { percents: number[]; reps: string[] };\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{name} – Wave Week</label>\r\n          <ul>\r\n            {waveWeek.percents.map((p, i) => (\r\n              <li key={i}>\r\n                {waveWeek.reps[i]} @ {calculateWeight(p, liftKey)}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if ('percent' in week && 'reps' in week) {\r\n      const basicWeek = week as { percent: number; reps: string };\r\n      const backoff = basicWeek.percent - 0.05;\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{name} – {basicWeek.reps} @ {Math.round(basicWeek.percent * 100)}%</label>\r\n          <p>Top Set: {calculateWeight(basicWeek.percent, liftKey)}</p>\r\n          <p>Backoff Sets: 2x{basicWeek.reps.split('x')[1]} @ {calculateWeight(backoff, liftKey)}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showIOSTooltip && (\r\n        <div className=\"ios-tooltip\">\r\n          <strong>Install on iOS:</strong>\r\n          <p style={{ margin: 0 }}>Tap the Share icon <span style={{ fontSize: '1.2em' }}>📤</span> and select <strong>\"Add to Home Screen\"</strong>.</p>\r\n          <button onClick={() => setShowIOSTooltip(false)} style={{ marginTop: '0.5rem' }}>Close</button>\r\n        </div>\r\n      )}\r\n      {showDisclaimerModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h2>Disclaimer</h2>\r\n            <p>\r\n              This app is not intended for beginners. Use at your own risk. Always consult a qualified coach or physician before beginning any training program. The developer assumes no responsibility for injury or harm resulting from use of this app.\r\n            </p>\r\n            <button onClick={() => {\r\n              localStorage.setItem('disclaimerAccepted', 'true');\r\n              setShowDisclaimerModal(false);\r\n            }}>I Acknowledge</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!showDisclaimerModal && (\r\n        <div className=\"app-container\">\r\n          <div className=\"calendar-view\">\r\n            <h3>This Week</h3>\r\n            <div className=\"calendar-row\">\r\n              {[...Array(7)].map((_, idx) => {\r\n                const today = new Date();\r\n                const date = new Date(today);\r\n                date.setDate(today.getDate() - today.getDay() + idx);\r\n                const dayLabel = date.toLocaleDateString(undefined, { weekday: 'short' });\r\n                const dateLabel = date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    className={`calendar-day-square ${completedDays[idx] ? 'completed' : ''}`}\r\n                    onClick={() => setCurrentDay(idx)}\r\n                  >\r\n                    <div>{dayLabel}</div>\r\n                    <div>{dateLabel}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          <h1 className=\"app-title\">Strength App: Day {currentDay + 1} – {todayLabel}</h1>\r\n<p className=\"phase-label\">Current Phase: {week.type.charAt(0).toUpperCase() + week.type.slice(1)}</p>\r\n\r\n          \r\n\r\n          <div className=\"form-wrapper\">\r\n            <form className=\"form\">\r\n              <h2>Enter Your 1 Rep Max</h2>\r\n              <button\r\n                type=\"button\"\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                  const cleared = {\r\n                    squat: 0, bench: 0, deadlift: 0, press: 0, clean: 0, snatch: 0,\r\n                  };\r\n                  setOneRepMax(cleared);\r\n                  localStorage.setItem('oneRepMax', JSON.stringify(cleared));\r\n                }}\r\n              >\r\n                Reset 1RMs\r\n              </button>\r\n              {Object.keys(oneRepMax).map(key => (\r\n                <div className=\"form-group\" key={key}>\r\n                  <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)} 1RM</label>\r\n                  <input\r\n                    id={key}\r\n                    type=\"number\"\r\n                    className=\"small-input\"\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    const { id, value } = e.target;\r\n                    const updated = { ...oneRepMax, [id]: parseInt(value) || 0 };\r\n                    setOneRepMax(updated);\r\n                    localStorage.setItem('oneRepMax', JSON.stringify(updated));\r\n                  }}\r\n                    value={oneRepMax[key]}\r\n                    placeholder={`e.g., ${key === 'snatch' ? 155 : 225}`}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <h2>Main Movement</h2>\r\n              {renderLift(mainFocus, mainFocus)}\r\n\r\n              <h2>Olympic Movement</h2>\r\n              {renderLift(olympicFocus, olympicFocus)}\r\n\r\n              <h2>Accessory Work</h2>\r\n              <ul>\r\n                {selectedAccessories.map((acc, idx) => (\r\n                  <AccessoryItem key={idx} accessory={acc} />\r\n                ))}\r\n              </ul>\r\n\r\n              <button type=\"button\" className=\"submit-button\" onClick={() => {\r\n                setCompletedDays(prev => {\r\n                  const updated = [...prev];\r\n                  updated[currentDay] = true;\r\n                  return updated;\r\n                });\r\n                setCurrentDay(prev => {\r\n                  const next = prev + 1;\r\n                  const newWeek = Math.floor(next / 7);\r\n                  setTrainingWeek(newWeek);\r\n\r\n                  const prevMain = localStorage.getItem(`mainLift_${prev}`);\r\n                  const prevOly = localStorage.getItem(`olyLift_${prev}`);\r\n\r\n                  const newMainOptions = mainLifts.filter(l => l !== prevMain);\r\n                  const newOlyOptions = olympicLifts.filter(l => l !== prevOly);\r\n\r\n                  const newMain = getRandomItems(newMainOptions, 1)[0];\r\n                  const newOly = getRandomItems(newOlyOptions, 1)[0];\r\n\r\n                  setMainFocus(newMain);\r\n                  setOlympicFocus(newOly);\r\n\r\n                  localStorage.setItem(`mainLift_${next}`, newMain);\r\n                  localStorage.setItem(`olyLift_${next}`, newOly);\r\n                  localStorage.setItem('mainFocusWeek', newMain);\r\n                  localStorage.setItem('olympicFocusWeek', newOly);\r\n                  localStorage.setItem('trainingWeek', newWeek.toString());\r\n                  localStorage.setItem('currentDay', next.toString());\r\n\r\n                  return next;\r\n                });\r\n              }}>\r\n                Complete Day\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          {showInstallButton && (\r\n            <button onClick={() => {\r\n              if (!deferredPrompt) {\r\n                setShowIOSTooltip(true);\r\n                return;\r\n              }\r\n              (deferredPrompt as any).prompt();\r\n              (deferredPrompt as any).userChoice.then(() => {\r\n                setDeferredPrompt(null);\r\n                setShowInstallButton(false);\r\n              });\r\n            }} style={{ position: 'fixed', bottom: 20, right: 20 }}>\r\n              Install App\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst AccessoryItem: React.FC<{ accessory: { name: string; description: string; instructions: string; video?: string } }> = ({ accessory }) => {\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  return (\r\n    <li>\r\n      <strong>{accessory.name} – {accessory.description}</strong>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setShowDetail(prev => !prev)}\r\n        style={{ marginLeft: '0.5rem' }}\r\n      >\r\n        {showDetail ? 'Hide' : 'Show'} Instructions\r\n      </button>\r\n      {showDetail && (\r\n        <div style={{ marginTop: '0.25rem' }}>\r\n          <p>{accessory.instructions}</p>\r\n          {accessory.video && (\r\n            <a href={accessory.video} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Watch Demo\r\n            </a>\r\n          )}\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","declare var process: {\r\n  env: {\r\n    PUBLIC_URL: string;\r\n  };\r\n};\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  window.location.hostname === '[::1]' ||\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${(window as any).location.origin}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first.');\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (!installingWorker) return;\r\n\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log('New content is available; it will be used once all tabs are closed.');\r\n              config?.onUpdate?.(registration);\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n              config?.onSuccess?.(registration);\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && !contentType.includes('javascript'))\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App'; // <-- now properly imports App.tsx\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nconst root = ReactDOM.createRoot(document.getElementById('root')!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}