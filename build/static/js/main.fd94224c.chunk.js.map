{"version":3,"sources":["App.tsx","index.js"],"names":["weeks","week","type","percent","reps","percents","App","oneRepMax","setOneRepMax","useState","squat","bench","deadlift","press","clean","snatch","currentWeek","setCurrentWeek","handleChange","e","id","value","target","[object Object]","parseInt","calculateWeight","lift","Math","round","renderLift","name","liftKey","React","createElement","className","map","p","i","key","backoffPercent","split","Object","keys","htmlFor","charAt","toUpperCase","slice","onChange","placeholder","onClick","prev","length","ReactDOM","createRoot","document","getElementById","render","StrictMode","StrengthApp"],"mappings":"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","file":"static/js/main.fd94224c.chunk.js","sourcesContent":["// src/App.tsx\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\n\r\ntype Week =\r\n  | { week: number; type: 'base' | 'deload'; percent: number; reps: string }\r\n  | { week: number; type: 'wave'; percents: number[]; reps: string[] };\r\n\r\nconst weeks: Week[] = [\r\n  { week: 1, type: 'base', percent: 0.7, reps: '4x6' },\r\n  { week: 2, type: 'base', percent: 0.75, reps: '4x5' },\r\n  { week: 3, type: 'base', percent: 0.8, reps: '4x4' },\r\n  { week: 4, type: 'wave', percents: [0.75, 0.77, 0.84, 0.87, 0.8, 0.75], reps: ['1x7', '1x5', '1x3', '1x3', '1x5', '1x7'] },\r\n  { week: 5, type: 'base', percent: 0.82, reps: '3x3' },\r\n  { week: 6, type: 'wave', percents: [0.77, 0.8, 0.86, 0.9, 0.82, 0.77], reps: ['1x7', '1x5', '1x3', '1x2', '1x4', '1x6'] },\r\n  { week: 7, type: 'base', percent: 0.85, reps: '3x2' },\r\n  { week: 8, type: 'deload', percent: 0.6, reps: '3x5' },\r\n];\r\n\r\nconst App: React.FC = () => {\r\n  const [oneRepMax, setOneRepMax] = useState<Record<string, number>>({\r\n    squat: 0,\r\n    bench: 0,\r\n    deadlift: 0,\r\n    press: 0,\r\n    clean: 0,\r\n    snatch: 0,\r\n  });\r\n\r\n  const [currentWeek, setCurrentWeek] = useState<number>(0);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { id, value } = e.target;\r\n    setOneRepMax({ ...oneRepMax, [id]: parseInt(value) || 0 });\r\n  };\r\n\r\n  const calculateWeight = (percent: number, lift: string): string => {\r\n    return `${Math.round(oneRepMax[lift] * percent)} lbs @ ${percent * 100}%`;\r\n  };\r\n\r\n  const renderLift = (name: string, liftKey: string) => {\r\n    const week = weeks[currentWeek];\r\n\r\n    if (week.type === 'wave') {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{name} – Wave Week</label>\r\n          <ul>\r\n            {week.percents.map((p, i) => (\r\n              <li key={i}>{week.reps[i]} – {calculateWeight(p, liftKey)}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const backoffPercent = week.percent - 0.05;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{name} – {week.reps} @ {week.percent * 100}%</label>\r\n        <p>Top Set: {calculateWeight(week.percent, liftKey)}</p>\r\n        <p>Backoff Sets: 2x{week.reps.split('x')[1]} @ {calculateWeight(backoffPercent, liftKey)}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"app-title\">Strength App: Day {currentWeek + 1}</h1>\r\n      <div className=\"form-wrapper\">\r\n        <form className=\"form\">\r\n          <h2>Enter Your 1 Rep Max</h2>\r\n          {Object.keys(oneRepMax).map((key) => (\r\n            <div className=\"form-group\" key={key}>\r\n              <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)} 1RM</label>\r\n              <input id={key} type=\"number\" onChange={handleChange} placeholder={`e.g., ${key === 'snatch' ? 155 : 225}`} />\r\n            </div>\r\n          ))}\r\n\r\n          <h2>Main & Olympic Lifts</h2>\r\n          {renderLift('Squat', 'squat')}\r\n          {renderLift('Bench Press', 'bench')}\r\n          {renderLift('Deadlift', 'deadlift')}\r\n          {renderLift('Overhead Press', 'press')}\r\n          {renderLift('Clean & Jerk', 'clean')}\r\n          {renderLift('Snatch', 'snatch')}\r\n\r\n          <h2>Accessory Work</h2>\r\n          <ul>\r\n            <li>Pull-ups – 3 sets to failure</li>\r\n            <li>Renegade Rows – 3x10 reps (moderate DB)</li>\r\n            <li>Russian Twists – 3x20 reps (light plate)</li>\r\n            <li>Dumbbell Curls – 4x12 reps</li>\r\n            <li>Bodyweight Dips – 3 sets to failure</li>\r\n            <li>Burpee to Renegade Row – 3x10 reps</li>\r\n            <li>Plate Overhead Lunge – 2x10 steps/leg</li>\r\n          </ul>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"submit-button\"\r\n            onClick={() => setCurrentWeek((prev) => (prev + 1) % weeks.length)}\r\n          >\r\n            Next Week\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport StrengthApp from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <StrengthApp />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}