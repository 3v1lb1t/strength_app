{"version":3,"sources":["App.tsx","index.js"],"names":["weeks","week","type","percent","reps","percents","accessoryPool","mainLifts","olympicLifts","App","oneRepMax","setOneRepMax","useState","squat","bench","deadlift","press","clean","snatch","currentDay","setCurrentDay","handleChange","e","id","value","target","[object Object]","parseInt","calculateWeight","lift","Math","round","renderLift","name","liftKey","length","React","createElement","className","accessories","map","acc","idx","key","backoffPercent","split","mainFocus","olympicFocus","getRandomItems","arr","count","sort","random","slice","todayLabel","charAt","toUpperCase","Object","keys","htmlFor","onChange","placeholder","onClick","prev","ReactDOM","createRoot","document","getElementById","render","StrictMode","StrengthApp"],"mappings":"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","file":"static/js/main.7aa16777.chunk.js","sourcesContent":["// src/App.tsx\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\n\r\ntype Week =\r\n  | { week: number; type: 'base' | 'deload'; percent: number; reps: string }\r\n  | { week: number; type: 'wave'; percents: number[]; reps: string[] };\r\n\r\nconst weeks: Week[] = [\r\n  { week: 1, type: 'base', percent: 0.7, reps: '4x6' },\r\n  { week: 2, type: 'base', percent: 0.75, reps: '4x5' },\r\n  { week: 3, type: 'base', percent: 0.8, reps: '4x4' },\r\n  { week: 4, type: 'wave', percents: [0.75, 0.77, 0.84, 0.87, 0.8, 0.75], reps: ['1x7', '1x5', '1x3', '1x3', '1x5', '1x7'] },\r\n  { week: 5, type: 'base', percent: 0.82, reps: '3x3' },\r\n  { week: 6, type: 'wave', percents: [0.77, 0.8, 0.86, 0.9, 0.82, 0.77], reps: ['1x7', '1x5', '1x3', '1x2', '1x4', '1x6'] },\r\n  { week: 7, type: 'base', percent: 0.85, reps: '3x2' },\r\n  { week: 8, type: 'deload', percent: 0.6, reps: '3x5' },\r\n];\r\n\r\nconst accessoryPool: string[] = [\r\n  'Overhead Press – 3x8 (barbell) @ light to moderate weight',\r\n  'Dumbbell Bench Press – 3x12 @ light to moderate',\r\n  'Incline Bench Press - 3x10 @ light to moderate',\r\n  'Dumbbell Incline Bench - 3x10 @ light to moderate',\r\n  'Chin-ups – 3xMax',\r\n  'Pull-ups – 3xMax',\r\n  'Renegade Rows – 3x10',\r\n  'Russian Twists – 3x20',\r\n  'Plate Overhead Lunge – 2x10/leg',\r\n  'Goblet Squat – 3x12',\r\n  'Bodyweight Dips – 3xMax',\r\n  'Burpee to Renegade Row – 3x10',\r\n  'Dumbbell Lunges – 3x12',\r\n  'Kettlebell Front rack lunge 3x10',\r\n  'Farmers Carry 3x100m',\r\n  'Plank Rows – 3x10',\r\n  'Overhead Plate Carry – 2x30s',\r\n  'Push-ups – 3xMax',\r\n  'Handstand Hold – 3x30sec',\r\n  'Push Press – 3x8 @ moderate weight',\r\n  'Behind Neck (BN) Push Press 3x8 @ moderate weight',\r\n  'Snatch Balance – 5x3 @ light weight',\r\n  'Push Jerk – 3x3 @ moderate weight ',\r\n  'Split Jerk – 3x3 @ moderate weight',\r\n  'L-Sit – 3x10sec',\r\n  'Clean Pulls: 3x10 @ light/moderate weight',\r\n  'Sumo Deadlift High Pulls 3x10 @ light weight',\r\n  'Tabata Burpees 3 rounds',\r\n  'Tabata Pushups 3 rounds'\r\n];\r\n\r\nconst mainLifts = ['squat', 'bench', 'deadlift', 'press'];\r\nconst olympicLifts = ['clean', 'snatch'];\r\n\r\nconst App: React.FC = () => {\r\n  const [oneRepMax, setOneRepMax] = useState<Record<string, number>>({\r\n    squat: 0,\r\n    bench: 0,\r\n    deadlift: 0,\r\n    press: 0,\r\n    clean: 0,\r\n    snatch: 0,\r\n  });\r\n\r\n  const [currentDay, setCurrentDay] = useState<number>(0);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { id, value } = e.target;\r\n    setOneRepMax({ ...oneRepMax, [id]: parseInt(value) || 0 });\r\n  };\r\n\r\n  const calculateWeight = (percent: number, lift: string): string => {\r\n    return `${Math.round(oneRepMax[lift] * percent)} lbs @ ${Math.round(percent * 100)}%`;\r\n  };\r\n\r\n  const renderLift = (name: string, liftKey: string) => {\r\n    const week = weeks[currentDay % weeks.length];\r\n\r\n    if (week.type === 'wave') {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label>{name} – Wave Week</label>\r\n          <ul>\r\n            {accessories.map((acc, idx) => (\r\n              <li key={idx}>{acc}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const backoffPercent = week.percent - 0.05;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{name} – {week.reps} @ {Math.round(week.percent * 100)}%</label>\r\n        <p>Top Set: {calculateWeight(week.percent, liftKey)}</p>\r\n        <p>Backoff Sets: 2x{week.reps.split('x')[1]} @ {calculateWeight(backoffPercent, liftKey)}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getRandomItems = (arr: string[], count: number) => {\r\n  const shuffled = [...arr].sort(() => 0.5 - Math.random());\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\nconst mainFocus = mainLifts[currentDay % mainLifts.length];\r\nconst olympicFocus = olympicLifts[currentDay % olympicLifts.length];\r\nconst accessories = getRandomItems(accessoryPool, 3);\r\nconst todayLabel = `${mainFocus.charAt(0).toUpperCase() + mainFocus.slice(1)} Focus`;\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"app-title\">Strength App: Day {currentDay + 1} – {todayLabel}</h1>\r\n      <div className=\"form-wrapper\">\r\n        <form className=\"form\">\r\n          <h2>Enter Your 1 Rep Max</h2>\r\n          {Object.keys(oneRepMax).map((key) => (\r\n            <div className=\"form-group\" key={key}>\r\n              <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)} 1RM</label>\r\n              <input id={key} type=\"number\" onChange={handleChange} placeholder={`e.g., ${key === 'snatch' ? 155 : 225}`} />\r\n            </div>\r\n          ))}\r\n\r\n          <h2>Main Movement</h2>\r\n          {renderLift(mainFocus.charAt(0).toUpperCase() + mainFocus.slice(1), mainFocus)}\r\n\r\n          <h2>Olympic Movement</h2>\r\n          {renderLift(olympicFocus.charAt(0).toUpperCase() + olympicFocus.slice(1), olympicFocus)}\r\n\r\n          <h2>Accessory Work</h2>\r\n          <ul>\r\n            {accessories.map((acc, idx) => (\r\n              <li key={idx}>{acc}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"submit-button\"\r\n            onClick={() => setCurrentDay((prev) => prev + 1)}\r\n          >\r\n            Next Day\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport StrengthApp from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <StrengthApp />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}